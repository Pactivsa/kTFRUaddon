/*
 * This class was created by <kuzuanpa>. It is distributed as
 * part of the kTFRUAddon Mod. Get the Source Code in github:
 * https://github.com/kuzuanpa/kTFRUAddon
 *
 * kTFRUAddon is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.

 * kTFRUAddon is Open Source and distributed under the
 * AGPLv3 License: https://www.gnu.org/licenses/agpl-3.0.txt
 *
 */

package cn.kuzuanpa.ktfruaddon.tile;

import cn.kuzuanpa.ktfruaddon.api.item.ItemList;
import cn.kuzuanpa.ktfruaddon.api.material.matList;
import cn.kuzuanpa.ktfruaddon.api.recipe.recipeMaps;
import cn.kuzuanpa.ktfruaddon.api.tile.ICircuitChangeableTileEntity;
import cn.kuzuanpa.ktfruaddon.api.tile.util.kTileNBT;
import cn.kuzuanpa.ktfruaddon.ktfruaddon;
import cn.kuzuanpa.ktfruaddon.tile.casing.rustBronzeCasing;
import cn.kuzuanpa.ktfruaddon.tile.computerCluster.NetworkCable;
import cn.kuzuanpa.ktfruaddon.tile.computerCluster.TestUser;
import cn.kuzuanpa.ktfruaddon.tile.computerCluster.controller.ControllerElectric;
import cn.kuzuanpa.ktfruaddon.tile.computerCluster.controller.ControllerWired;
import cn.kuzuanpa.ktfruaddon.tile.computerCluster.controller.ControllerWireless;
import cn.kuzuanpa.ktfruaddon.tile.energy.generator.*;
import cn.kuzuanpa.ktfruaddon.tile.energy.storage.FlywheelBox;
import cn.kuzuanpa.ktfruaddon.tile.energy.storage.FlywheelBoxElec;
import cn.kuzuanpa.ktfruaddon.tile.machine.*;
import cn.kuzuanpa.ktfruaddon.tile.multiblock.*;
import cn.kuzuanpa.ktfruaddon.tile.multiblock.energy.generator.MantleHeater;
import cn.kuzuanpa.ktfruaddon.tile.multiblock.energy.generator.MultiTileEntityLargeTurbineGas;
import cn.kuzuanpa.ktfruaddon.tile.multiblock.energy.generator.MultiTileEntityLargeTurbineSteam;
import cn.kuzuanpa.ktfruaddon.tile.multiblock.energy.generator.SunHeater;
import cn.kuzuanpa.ktfruaddon.tile.multiblock.energy.storage.LiquidBattery;
import cn.kuzuanpa.ktfruaddon.tile.multiblock.energy.storage.TransformBattery;
import cn.kuzuanpa.ktfruaddon.tile.multiblock.model.CNCMachine3;
import cn.kuzuanpa.ktfruaddon.tile.multiblock.parts.*;
import cn.kuzuanpa.ktfruaddon.tile.research.ResearchTreeMonitor;
import cn.kuzuanpa.ktfruaddon.tile.space.dysonSphere.dysonSphereMonitor;
import cn.kuzuanpa.ktfruaddon.tile.tank.CompressedGasTank;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import gregapi.block.multitileentity.MultiTileEntityBlock;
import gregapi.block.multitileentity.MultiTileEntityRegistry;
import gregapi.data.*;
import gregapi.oredict.OreDictItemData;
import gregapi.oredict.OreDictManager;
import gregapi.oredict.OreDictMaterial;
import gregapi.tileentity.connectors.MultiTileEntityPipeFluid;
import gregapi.tileentity.connectors.MultiTileEntityPipeItem;
import gregapi.tileentity.machines.MultiTileEntityBasicMachine;
import gregapi.tileentity.machines.MultiTileEntityBasicMachineElectric;
import gregapi.tileentity.multiblocks.MultiTileEntityMultiBlockPart;
import gregapi.util.CR;
import gregapi.util.ST;
import gregapi.util.UT;
import gregtech.tileentity.energy.generators.MultiTileEntityMotorLiquid;
import gregtech.tileentity.energy.reactors.MultiTileEntityReactorRodBreeder;
import gregtech.tileentity.energy.reactors.MultiTileEntityReactorRodProduct;
import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import vazkii.botania.common.lib.LibOreDict;

import static cn.kuzuanpa.ktfruaddon.EnvironmentHelper.isBotaniaTFRU;
import static cn.kuzuanpa.ktfruaddon.EnvironmentHelper.isGregtechTFRU;
import static cn.kuzuanpa.ktfruaddon.api.tile.util.kTileNBT.LOSS_PERCENT;
import static cn.kuzuanpa.ktfruaddon.api.tile.util.kTileNBT.MAX_AMPERE;
import static cn.kuzuanpa.ktfruaddon.ktfruaddon.MOD_ID;
import static gregapi.data.CS.*;
import static gregapi.util.CR.DEF;

public class tileEntityInit0 {
    static MultiTileEntityBlock aMachine = MultiTileEntityBlock.getOrCreate(MOD_ID, "machine", gregapi.block.MaterialMachines.instance, net.minecraft.block.Block.soundTypeMetal, gregapi.data.CS.TOOL_wrench, 0, 0, 15, false, false);
    static MultiTileEntityBlock aUtilMetal = MultiTileEntityBlock.getOrCreate(MOD_ID, "redstoneLight", Material.redstoneLight    , Block.soundTypeMetal, TOOL_pickaxe, 0, 0, 15, F, F);
    static MultiTileEntityRegistry kRegistry0 = ktfruaddon.kTileRegistry0;
    static MultiTileEntityRegistry gRegistry = MultiTileEntityRegistry.getRegistry("gt.multitileentity");
    static MultiTileEntityBlock tWireBlock = MultiTileEntityBlock.getOrCreate(MOD_ID, "machine", gregapi.block.MaterialMachines.instance, net.minecraft.block.Block.soundTypeMetal, gregapi.data.CS.TOOL_cutter, 0, 0, 15, F, F);
    static MultiTileEntityBlock tMetalBlock = MultiTileEntityBlock.getOrCreate(MOD_ID, "iron", net.minecraft.block.material.Material.iron, net.minecraft.block.Block.soundTypeMetal, gregapi.data.CS.TOOL_pickaxe, 0, 0, 15, F, F);
    static MultiTileEntityBlock tWoodBlock  = MultiTileEntityBlock.getOrCreate(MOD_ID, "wood"         , Material.wood             , Block.soundTypeWood , TOOL_axe    , 0, 0, 15, F, F);

    public static void initRandoms(){
        OreDictMaterial aMat;
        Class<? extends net.minecraft.tileentity.TileEntity> aClass;
        int i;
        MultiTileEntityPipeFluid.addFluidPipes(0, 26142, 800, true, true, false, true, false, false, true, false,kRegistry0, aMachine, gregapi.tileentity.connectors.MultiTileEntityPipeFluid.class, (long) (MT.Teflon.mMeltingPoint * 1.25), MT.Teflon);
        MultiTileEntityPipeItem.addItemPipes(26, 25202, 8192, 4, true, false,kRegistry0, aMachine, gregapi.tileentity.connectors.MultiTileEntityPipeItem.class,  MT.PVC);
        //gregapi.tileentity.connectors.MultiTileEntityWireElectric.addElectricWires(50, 0, gregapi.data.CS.VMAX[4], 1, 0, 0, true, false, true, kRegistry0, tWireBlock, gregapi.tileentity.connectors.MultiTileEntityWireElectric.class, tExamplium);

        aMat = MT.StainlessSteel;      kRegistry0.add("Test Electric Controller"                         , "ktfruaddon: Energy",  100, 1304, ControllerElectric.class       , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.5F, NBT_RESISTANCE,  6.5F, NBT_FUELMAP , recipeMaps.FuelBattery, NBT_OUTPUT, 512 ,NBT_ENERGY_EMITTED, TD.Energy.EU));
        aMat = MT.StainlessSteel;      kRegistry0.add("Test Wireless Controller"                         , "ktfruaddon: Energy",  101, 1304, ControllerWireless.class       , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.5F, NBT_RESISTANCE,  6.5F, NBT_FUELMAP , recipeMaps.FuelBattery, NBT_OUTPUT, 512 ,NBT_ENERGY_EMITTED, TD.Energy.EU));
        aMat = MT.StainlessSteel;      kRegistry0.add("Test Wired Controller"                            , "ktfruaddon: Energy",  102, 1304, ControllerWired.class          , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.5F, NBT_RESISTANCE,  6.5F, NBT_FUELMAP , recipeMaps.FuelBattery, NBT_OUTPUT, 512 ,NBT_ENERGY_EMITTED, TD.Energy.EU));
        aMat = MT.StainlessSteel;      kRegistry0.add("Test User"                                        , "ktfruaddon: Energy",  103, 1304, TestUser.class                 , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.5F, NBT_RESISTANCE,  6.5F, NBT_FUELMAP , recipeMaps.FuelBattery, NBT_OUTPUT, 512 ,NBT_ENERGY_EMITTED, TD.Energy.EU));
        aMat = MT.StainlessSteel;      kRegistry0.add("Network Wire"                                     , "ktfruaddon: Energy",  104, 1304, NetworkCable.class             , aMat.mToolQuality, 16, tWireBlock , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.5F, NBT_RESISTANCE,  6.5F, NBT_FUELMAP , recipeMaps.FuelBattery, NBT_OUTPUT, 512 ,NBT_ENERGY_EMITTED, TD.Energy.EU));
        aMat = MT.StainlessSteel;      kRegistry0.add("Research monitor"                                 , "ktfruaddon: Energy",  105, 1304, ResearchTreeMonitor.class      , aMat.mToolQuality, 16, tWireBlock , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.5F, NBT_RESISTANCE,  6.5F, NBT_FUELMAP , recipeMaps.FuelBattery, NBT_OUTPUT, 512 ,NBT_ENERGY_EMITTED, TD.Energy.EU));

        //9800-9899, Early TFC Stage Machines
        aMat = MT.WoodTreated;      kRegistry0.add("Water Mill"                                       , "ktfruaddon: Energy",  9800, 1304, WaterMill.class       , aMat.mToolQuality, 16, tWoodBlock   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  1.5F, NBT_RESISTANCE,  1.5F), "PPP", "SRS", "PPP", 'R', gRegistry.getItem(24802), 'P', OP.plate.dat(MT.WoodTreated), 'S', OP.ring.dat(MT.Bronze));
        aMat = MT.WoodTreated;      kRegistry0.add("Primitive Presser"                                , "ktfruaddon: Energy",  9801, 1304, TFCPresser.class      , aMat.mToolQuality, 16, tWoodBlock   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  4.5F, NBT_RESISTANCE,  4.5F), "SPS", "PPP", "hIw", 'R', gRegistry.getItem(24802), 'P', OP.plate.dat(MT.WoodTreated), 'S', OP.screw.dat(MT.Bronze), 'I', OP.ingotDouble.dat(MT.Bronze));


        //9900-9999, Reactor Rods
        aMat = MT.Co;                   kRegistry0.add("Co-60 Breeder Rod"                               , "ktfruaddon: Energy",  9980,  9200, MultiTileEntityReactorRodBreeder.class  , aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  10.0F, NBT_RESISTANCE,  10.0F, NBT_MAXDURABILITY,   6400000L, NBT_NUCLEAR_LOSS,  1000, NBT_VALUE, 9990));
        //aMat = MT.U_238;                kRegistry0.add("Uranium-238 Breeder Rod"                                 , "ktfruaddon: Energy",  9981,  9200, MultiTileEntityReactorRodBreeder.class  , aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  10.0F, NBT_RESISTANCE,  10.0F, NBT_MAXDURABILITY,  256000000L, NBT_NUCLEAR_LOSS,  2500, NBT_VALUE, 9991)); RM.Canner.addRecipe2(F, 16, 16, OP.bolt.mat(aMat, 4), IL.Reactor_Rod_Empty.get(1), kRegistry0.getItem());
        //aMat = MT.Li;                   kRegistry0.add("Lithium Breeder Rod"                                     , "ktfruaddon: Energy",  9982,  9200, MultiTileEntityReactorRodBreeder.class  , aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  10.0F, NBT_RESISTANCE,  10.0F, NBT_MAXDURABILITY,     640000L, NBT_NUCLEAR_LOSS,   250, NBT_VALUE, 9992)); RM.Canner.addRecipe2(F, 16, 16, OP.bolt.mat(aMat, 4), IL.Reactor_Rod_Empty.get(1), kRegistry0.getItem());
        //aMat = MT.Nq;                   kRegistry0.add("Naquadah Breeder Rod"                                    , "ktfruaddon: Energy",  9983,  9200, MultiTileEntityReactorRodBreeder.class  , aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  10.0F, NBT_RESISTANCE,  10.0F, NBT_MAXDURABILITY, 4096000000L, NBT_NUCLEAR_LOSS, 10000, NBT_VALUE, 9993)); RM.Canner.addRecipe2(F, 16, 16, OP.bolt.mat(aMat, 4), IL.Reactor_Rod_Empty.get(1), kRegistry0.getItem());
        //
        aMat = MT.Co_60;                kRegistry0.add("Co-60 Enriched Rod"                              , "ktfruaddon: Energy",  9990,  9200, MultiTileEntityReactorRodProduct.class  , aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  10.0F, NBT_RESISTANCE,  10.0F, NBT_VALUE, 9980)); RM.Centrifuge.addRecipe1(F,  64, 256, kRegistry0.getItem(), ZL_FS, ZL_FS, OP.scrapGt.mat(MT.Zr, 9), OP.dustTiny.mat(aMat, 4), OP.dustDiv72.mat(MT.Co, 4));
        //aMat = MT.Pu_239;               kRegistry0.add("Plutonium-239 Enriched Rod"                              , "ktfruaddon: Energy",  9992,  9200, MultiTileEntityReactorRodProduct.class  , aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  10.0F, NBT_RESISTANCE,  10.0F, NBT_VALUE, 9981)); RM.Centrifuge.addRecipe1(F,  64, 256, kRegistry0.getItem(), ZL_FS, ZL_FS, OP.scrapGt.mat(MT.Zr, 9), OP.dustTiny.mat(aMat, 4), OP.dustDiv72.mat(MT.U_238, 4));
        //aMat = MT.T;                    kRegistry0.add("Tritium Enriched Rod"                                    , "ktfruaddon: Energy",  9993,  9200, MultiTileEntityReactorRodProduct.class  , aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  10.0F, NBT_RESISTANCE,  10.0F, NBT_VALUE, 9982)); RM.Canner    .addRecipe1(F,  16,  16, kRegistry0.getItem(), new FluidStack[] {}, FL.amount(aMat.mGas, 500L), IL.Reactor_Rod_Empty.get(1));
        //aMat = MT.Nq_528;               kRegistry0.add("Enriched Naquadah Enriched Rod"                          , "ktfruaddon: Energy",  9994,  9200, MultiTileEntityReactorRodProduct.class  , aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  10.0F, NBT_RESISTANCE,  10.0F, NBT_VALUE, 9983)); RM.Centrifuge.addRecipe1(F, 512, 256, kRegistry0.getItem(), ZL_FS, ZL_FS, OP.scrapGt.mat(MT.Zr, 9), OP.dustTiny.mat(aMat, 4), OP.dustDiv72.mat(MT.Nq, 4));

    }
    public static void initEnergyTiles(){
        OreDictMaterial aMat;
        Class<? extends net.minecraft.tileentity.TileEntity> aClass;
        int i;
        //10000-14999,Single Block Generators
        i=10000;
        //Small Gas Turbine
        aClass = MultiTileEntityGasMotor.class;
        aMat = MT.Bronze;               kRegistry0.add("Small Gas Turbine (" + aMat.getLocal() + ")"             , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Gas, NBT_EFFICIENCY, 3500, NBT_OUTPUT,   16, NBT_ENERGY_EMITTED, TD.Energy.RU), "PLP", "SMS", "GOC", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeQuadruple.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant);
        aMat = ANY.Steel;               kRegistry0.add("Small Gas Turbine (" + aMat.getLocal() + ")"             , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Gas, NBT_EFFICIENCY, 3500, NBT_OUTPUT,   32, NBT_ENERGY_EMITTED, TD.Energy.RU), "PLP", "SMS", "GOC", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeQuadruple.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant);
        aMat = MT.Invar;                kRegistry0.add("Small Gas Turbine (" + aMat.getLocal() + ")"             , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Gas, NBT_EFFICIENCY, 3500, NBT_OUTPUT,   64, NBT_ENERGY_EMITTED, TD.Energy.RU), "PLP", "SMS", "GOC", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeQuadruple.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant);
        aMat = MT.Ti;                   kRegistry0.add("Small Gas Turbine (" + aMat.getLocal() + ")"             , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Gas, NBT_EFFICIENCY, 3500, NBT_OUTPUT,  128, NBT_ENERGY_EMITTED, TD.Energy.RU), "PLP", "SMS", "GOC", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeQuadruple.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant);
        aMat = MT.TungstenSteel;        kRegistry0.add("Small Gas Turbine (" + aMat.getLocal() + ")"             , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Gas, NBT_EFFICIENCY, 3500, NBT_OUTPUT,  372, NBT_ENERGY_EMITTED, TD.Energy.RU), "PLP", "SMS", "GOC", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeQuadruple.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant);
        aMat = MT.Ir;                   kRegistry0.add("Small Gas Turbine (" + aMat.getLocal() + ")"             , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Gas, NBT_EFFICIENCY, 3500, NBT_OUTPUT,  768, NBT_ENERGY_EMITTED, TD.Energy.RU), "PLP", "SMS", "GOC", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeQuadruple.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant);
        aMat = MT.Cr;                   kRegistry0.add("Small Gas Turbine (" + aMat.getLocal() + ")"             , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Gas, NBT_EFFICIENCY, 3500, NBT_OUTPUT,  256, NBT_ENERGY_EMITTED, TD.Energy.RU), "PLP", "SMS", "GOC", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeQuadruple.dat(aMat), 'P', OP.plateTriple.dat(aMat), 'S', OP.rotor.dat(aMat), 'G', OP.gearGt.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant);

        //Gas Battery
        aClass = FuelBattery.class;
        aMat = MT.Al;                  kRegistry0.add("Gas Battery (4U)"                                         , "ktfruaddon: Energy", 10010, 1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.5F, NBT_RESISTANCE,  6.5F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP , recipeMaps.FuelBattery, NBT_OUTPUT, 128 ,NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_DESIGN, 1, kTileNBT.LIQUID_CATALYST_REQUIRED, 1000));recipeMaps.Assembler.addRecipeX(F,64,20,ST.array(OP.casingMachine.mat(aMat,1),ItemList.ProtonExchangeMembrane.get(2),kRegistry0.getItem(2)/*Teflon Pipe*/,gRegistry.getItem(29251,1)/*2x Pt Wire*/,OP.plate.mat(MT.Glass,1),OP.plate.mat(MT.Teflon, 8)),ZL_FS,ZL_FS,kRegistry0.getItem());
        aMat = MT.StainlessSteel;      kRegistry0.add("Gas Battery (16U)"                                        , "ktfruaddon: Energy", 10011, 1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.5F, NBT_RESISTANCE,  6.5F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP , recipeMaps.FuelBattery, NBT_OUTPUT, 512 ,NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_DESIGN, 2, kTileNBT.LIQUID_CATALYST_REQUIRED, 4000));recipeMaps.Assembler.addRecipeX(F,64,20,ST.array(OP.casingMachine.mat(aMat,1),ItemList.ProtonExchangeMembrane.get(8),kRegistry0.getItem(2)/*Teflon Pipe*/,gRegistry.getItem(29251,4)/*2x Pt Wire*/,OP.plate.mat(MT.Glass,4),OP.plate.mat(MT.Teflon,24)),ZL_FS,ZL_FS,kRegistry0.getItem());

        //Manual Motor
        aClass= ManualGenerator.class;
        aMat = MT.WoodTreated;         kRegistry0.add("Manual Motor (Wood)"                  , "ktfruaddon: Energy", 10021, 1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.5F, NBT_RESISTANCE,  6.5F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),NBT_OUTPUT_MIN,4 ,NBT_OUTPUT_MAX,10, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE,"RU", kTileNBT.MAX_TIME,400),"PMP","SMS","GhC",'M',OP.plank.dat(aMat),'P', OD.itemLeather,'S',OP.stickLong.dat(aMat),'G', OP.gearGt.dat(aMat), 'C', OP.gearGtSmall.dat(aMat));
        aMat = MT.Bronze;              kRegistry0.add("Manual Motor (Bronze)"                , "ktfruaddon: Energy", 10022, 1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.5F, NBT_RESISTANCE,  6.5F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),NBT_OUTPUT_MIN,14 ,NBT_OUTPUT_MAX,22, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE,"RU", kTileNBT.MAX_TIME,800),"PLP","SMS","GhC",'M',OP.casingMachine.dat(aMat),'L',OD.itemLubricant,'P', OD.itemLeather,'S',OP.stickLong.dat(aMat),'G', OP.gearGt.dat(aMat), 'C', OP.gearGtSmall.dat(aMat));
        aMat = MT.WoodTreated;         kRegistry0.add("Manual Motor (Wood)"                  , "ktfruaddon: Energy", 10026, 1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.5F, NBT_RESISTANCE,  6.5F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),NBT_OUTPUT_MIN,3 ,NBT_OUTPUT_MAX,8, NBT_ENERGY_EMITTED, TD.Energy.KU, NBT_TEXTURE,"KU", kTileNBT.MAX_TIME,200),"PMP","SMS","GhG",'M',OP.plank.dat(aMat),'P', OD.itemLeather,'S',OP.stickLong.dat(aMat),'G', OP.plate.dat(aMat));
        aMat = MT.Bronze;              kRegistry0.add("Manual Motor (Bronze)"                , "ktfruaddon: Energy", 10027, 1304, aClass, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.5F, NBT_RESISTANCE,  6.5F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),NBT_OUTPUT_MIN,6 ,NBT_OUTPUT_MAX,16, NBT_ENERGY_EMITTED, TD.Energy.KU, NBT_TEXTURE,"KU", kTileNBT.MAX_TIME,400),"PLP","SMS","GhG",'M',OP.casingMachine.dat(aMat),'L',OD.itemLubricant,'P', OD.itemLeather,'S',OP.stickLong.dat(aMat),'G', OP.plate.dat(aMat));

        //Compressed Tank, Isn't generator actually
        aClass= CompressedGasTank.class;
        aMat = MT.Steel;            kRegistry0.add("Steel Compress Gas Drum"                              , "ktfruaddon: Energy", 10050, 1304, aClass, 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_TANK_CAPACITY,      12800000L, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_MAGICPROOF, F                                                          ), " h ", "PSP", "PSP", 'P', OP.plateDense.dat(aMat), 'S', OP.stickLong.dat(aMat));
        aMat = MT.StainlessSteel;   kRegistry0.add("Stainless Steel Compress Gas Drum"                    , "ktfruaddon: Energy", 10051, 1304, aClass, 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_TANK_CAPACITY,      12800000L, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_MAGICPROOF, F                                                          ), " h ", "PSP", "PSP", 'P', OP.plateDense.dat(aMat), 'S', OP.stickLong.dat(aMat));
        aMat = MT.Manasteel;        kRegistry0.add("Manasteel Compress Gas Drum"                          , "ktfruaddon: Energy", 10052, 1304, aClass, 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   6.0F, NBT_TANK_CAPACITY,      12800000L, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_MAGICPROOF, T                                                          ), " h ", "PSP", "PSP", 'P', OP.plateDense.dat(aMat), 'S', OP.stickLong.dat(aMat));
        aMat = MT.Netherite;        kRegistry0.add("Netherite Compress Gas Drum"                          , "ktfruaddon: Energy", 10053, 1304, aClass, 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   9.0F, NBT_TANK_CAPACITY,      25600000L, NBT_PLASMAPROOF, T, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_MAGICPROOF, T                                                          ), " h ", "PSP", "PSP", 'P', OP.plateDense.dat(aMat), 'S', OP.stickLong.dat(aMat));
        aMat = MT.TungstenSteel;    kRegistry0.add("Tungstensteel Compress Gas Drum"                      , "ktfruaddon: Energy", 10054, 1304, aClass, 0, 16, aUtilMetal     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,  12.5F, NBT_TANK_CAPACITY,      51200000L, NBT_PLASMAPROOF, F, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_MAGICPROOF, T                                                          ), " h ", "PSP", "PSP", 'P', OP.plateDense.dat(aMat), 'S', OP.stickLong.dat(aMat));

        i=10100;
        //Small Diesel Engine
        aClass = MultiTileEntityMotorLiquid.class;
        aMat = MT.Bronze;               if(isGregtechTFRU)kRegistry0.add("Diesel Engine (" + aMat.getLocal() + ")"                 , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 3300, NBT_OUTPUT,   16, NBT_ENERGY_EMITTED, TD.Energy.RU), "Y L", "RwM", "dSO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaftManual1 ,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinderManual1 );
        aMat = MT.ArsenicCopper;        if(isGregtechTFRU)kRegistry0.add("Diesel Engine (" + aMat.getLocal() + ")"                 , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 3300, NBT_OUTPUT,   16, NBT_ENERGY_EMITTED, TD.Energy.RU), "Y L", "RwM", "dSO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaftManual2 ,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinderManual2 );
        aMat = MT.ArsenicBronze;        if(isGregtechTFRU)kRegistry0.add("Diesel Engine (" + aMat.getLocal() + ")"                 , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 3300, NBT_OUTPUT,   24, NBT_ENERGY_EMITTED, TD.Energy.RU), "Y L", "RwM", "dSO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaftManual3 ,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinderManual3 );
        aMat = ANY.Steel;               if(isGregtechTFRU)kRegistry0.add("Diesel Engine (" + aMat.getLocal() + ")"                 , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 3300, NBT_OUTPUT,   32, NBT_ENERGY_EMITTED, TD.Energy.RU), "SYL", "RwM", "dYO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaftManual4 ,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinderManual4 );
        aMat = MT.Invar;                if(isGregtechTFRU)kRegistry0.add("Diesel Engine (" + aMat.getLocal() + ")"                 , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 3300, NBT_OUTPUT,   64, NBT_ENERGY_EMITTED, TD.Energy.RU), "SYL", "RwM", "dYO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaftManual5 ,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinderManual5 );
        aMat = MT.Ti;                   if(isGregtechTFRU)kRegistry0.add("Diesel Engine (" + aMat.getLocal() + ")"                 , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 3300, NBT_OUTPUT,  128, NBT_ENERGY_EMITTED, TD.Energy.RU), "SYL", "RwM", "dYO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaftManual6 ,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinderManual6 );
        aMat = MT.TungstenSteel;        if(isGregtechTFRU)kRegistry0.add("Diesel Engine (" + aMat.getLocal() + ")"                 , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 3300, NBT_OUTPUT,  372, NBT_ENERGY_EMITTED, TD.Energy.RU), "YYL", "RwM", "YYO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaftManual7                        ,'Y',ItemList.EngineCylinderManual7 );
        aMat = MT.Ir;                   if(isGregtechTFRU)kRegistry0.add("Diesel Engine (" + aMat.getLocal() + ")"                 , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 3300, NBT_OUTPUT,  768, NBT_ENERGY_EMITTED, TD.Energy.RU), "YYL", "RwM", "YYO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaftManual8                        ,'Y',ItemList.EngineCylinderManual8 );
        aMat = MT.Cr;                   if(isGregtechTFRU)kRegistry0.add("Diesel Engine (" + aMat.getLocal() + ")"                 , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 3300, NBT_OUTPUT,  256, NBT_ENERGY_EMITTED, TD.Energy.RU), "SYL", "RwM", "dYO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaftManualCr,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinderManualCr);

        i=10150;
        aMat = MT.Bronze;               if(isGregtechTFRU)kRegistry0.add("Turbocharging Diesel Engine (" + aMat.getLocal() + ")"   , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 5200, NBT_OUTPUT,   24, NBT_ENERGY_EMITTED, TD.Energy.RU), " YT", "RLM", "dSO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaft1 ,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinder1 ,'T',ItemList.EngineTurbo1 );
        aMat = MT.ArsenicCopper;        if(isGregtechTFRU)kRegistry0.add("Turbocharging Diesel Engine (" + aMat.getLocal() + ")"   , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 5200, NBT_OUTPUT,   24, NBT_ENERGY_EMITTED, TD.Energy.RU), " YT", "RLM", "dSO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaft2 ,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinder2 ,'T',ItemList.EngineTurbo2 );
        aMat = MT.ArsenicBronze;        if(isGregtechTFRU)kRegistry0.add("Turbocharging Diesel Engine (" + aMat.getLocal() + ")"   , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 5200, NBT_OUTPUT,   36, NBT_ENERGY_EMITTED, TD.Energy.RU), " YT", "RLM", "dSO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaft3 ,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinder3 ,'T',ItemList.EngineTurbo3 );
        aMat = ANY.Steel;               if(isGregtechTFRU)kRegistry0.add("Turbocharging Diesel Engine (" + aMat.getLocal() + ")"   , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 5200, NBT_OUTPUT,   48, NBT_ENERGY_EMITTED, TD.Energy.RU), "SYT", "RLM", "dYO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaft4 ,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinder4 ,'T',ItemList.EngineTurbo4 );
        aMat = MT.Invar;                if(isGregtechTFRU)kRegistry0.add("Turbocharging Diesel Engine (" + aMat.getLocal() + ")"   , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 5200, NBT_OUTPUT,   96, NBT_ENERGY_EMITTED, TD.Energy.RU), "SYT", "RLM", "dYO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaft5 ,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinder5 ,'T',ItemList.EngineTurbo5 );
        aMat = MT.Ti;                   if(isGregtechTFRU)kRegistry0.add("Turbocharging Diesel Engine (" + aMat.getLocal() + ")"   , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 5200, NBT_OUTPUT,  172, NBT_ENERGY_EMITTED, TD.Energy.RU), "SYT", "RLM", "dYO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaft6 ,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinder6 ,'T',ItemList.EngineTurbo6 );
        aMat = MT.TungstenSteel;        if(isGregtechTFRU)kRegistry0.add("Turbocharging Diesel Engine (" + aMat.getLocal() + ")"   , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 5200, NBT_OUTPUT,  558, NBT_ENERGY_EMITTED, TD.Energy.RU), "YYT", "RLM", "YYO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaft7                        ,'Y',ItemList.EngineCylinder7 ,'T',ItemList.EngineTurbo7 );
        aMat = MT.Ir;                   if(isGregtechTFRU)kRegistry0.add("Turbocharging Diesel Engine (" + aMat.getLocal() + ")"   , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 5200, NBT_OUTPUT, 1152, NBT_ENERGY_EMITTED, TD.Energy.RU), "YYT", "RLM", "YYO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaft8                        ,'Y',ItemList.EngineCylinder8 ,'T',ItemList.EngineTurbo8 );
        aMat = MT.Cr;                   if(isGregtechTFRU)kRegistry0.add("Turbocharging Diesel Engine (" + aMat.getLocal() + ")"   , "ktfruaddon: Energy",  i++,  1304, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_FUELMAP, FM.Engine, NBT_EFFICIENCY, 5200, NBT_OUTPUT,  384, NBT_ENERGY_EMITTED, TD.Energy.RU), "SYT", "RLM", "dYO", 'M', OP.casingMachineDouble.dat(aMat), 'O', OP.pipeMedium.dat(aMat), 'C', OP.gearGtSmall.dat(aMat), 'L', OD.itemLubricant,'R',ItemList.EngineCrankShaftCr,'S',OP.screw.dat(aMat),'Y',ItemList.EngineCylinderCr,'T',ItemList.EngineTurboCr);


        aClass = TransformerPart.class;
        aMat = MT.SteelGalvanized; kRegistry0.add("TransFormer Part (LV)"   , "kTFRUAddon: Multiblock", 10200, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,     32, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_TEXTURE, "elec_small")); recipeMaps.Assembler.addRecipeX(F, 32,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28050,  4)/*1x Sn Wire*/,gRegistry.getItem(28066,2)/*1x Sn Cable*/, IL.Circuit_Basic   .get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Al;              kRegistry0.add("TransFormer Part (MV)"   , "kTFRUAddon: Multiblock", 10201, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,    128, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_TEXTURE, "elec_small")); recipeMaps.Assembler.addRecipeX(F, 32,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28350,  8)/*1x Cu Wire*/,gRegistry.getItem(28366,2)/*1x Cu Cable*/, IL.Circuit_Good    .get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.StainlessSteel;  kRegistry0.add("TransFormer Part (HV)"   , "kTFRUAddon: Multiblock", 10202, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,    512, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_TEXTURE, "elec_small")); recipeMaps.Assembler.addRecipeX(F,128,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28700, 16)/*1x Au Wire*/,gRegistry.getItem(28716,2)/*1x Au Cable*/, IL.Circuit_Advanced.get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Cr;              kRegistry0.add("TransFormer Part (EV)"   , "kTFRUAddon: Multiblock", 10203, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,   2048, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_TEXTURE, "elec_small")); recipeMaps.Assembler.addRecipeX(F,128,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(29000, 32)/*1x Al Wire*/,gRegistry.getItem(29016,2)/*1x Al Cable*/, IL.Circuit_Elite   .get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ti;              kRegistry0.add("TransFormer Part (IV)"   , "kTFRUAddon: Multiblock", 10204, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,   8192, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_TEXTURE, "elec_small")); recipeMaps.Assembler.addRecipeX(F,512,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 2), gRegistry.getItem(29250, 64)/*1x Pt Wire*/,gRegistry.getItem(29266,2)/*1x Pt Cable*/, IL.Circuit_Master  .get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ir;              kRegistry0.add("TransFormer Part (LuV)"  , "kTFRUAddon: Multiblock", 10205, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,  32768, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_TEXTURE, "elec_small")); recipeMaps.Assembler.addRecipeX(F,512,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 2), gRegistry.getItem(29800, 64)/*1x Gr Wire*/,gRegistry.getItem(29800,64)/*1x Gr Cable*/, IL.Circuit_Ultimate.get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());

        aMat = MT.SteelGalvanized; kRegistry0.add("TransFormer Part (LV)"   , "kTFRUAddon: Multiblock", 10210, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,     32, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_TEXTURE, "elec_large")); recipeMaps.Assembler.addRecipeX(F, 32,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28057,  4)/*8x Sn Wire*/,gRegistry.getItem(28069,2)/*4x Sn Cable*/, IL.Circuit_Basic   .get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Al;              kRegistry0.add("TransFormer Part (MV)"   , "kTFRUAddon: Multiblock", 10211, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,    128, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_TEXTURE, "elec_large")); recipeMaps.Assembler.addRecipeX(F, 32,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28357,  8)/*8x Cu Wire*/,gRegistry.getItem(28369,2)/*4x Cu Cable*/, IL.Circuit_Good    .get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.StainlessSteel;  kRegistry0.add("TransFormer Part (HV)"   , "kTFRUAddon: Multiblock", 10212, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,    512, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_TEXTURE, "elec_large")); recipeMaps.Assembler.addRecipeX(F,128,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28707, 16)/*8x Au Wire*/,gRegistry.getItem(28719,2)/*4x Au Cable*/, IL.Circuit_Advanced.get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Cr;              kRegistry0.add("TransFormer Part (EV)"   , "kTFRUAddon: Multiblock", 10213, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,   2048, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_TEXTURE, "elec_large")); recipeMaps.Assembler.addRecipeX(F,128,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(29007, 32)/*8x Al Wire*/,gRegistry.getItem(29019,2)/*4x Al Cable*/, IL.Circuit_Elite   .get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ti;              kRegistry0.add("TransFormer Part (IV)"   , "kTFRUAddon: Multiblock", 10214, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,   8192, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_TEXTURE, "elec_large")); recipeMaps.Assembler.addRecipeX(F,512,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 2), gRegistry.getItem(29257, 64)/*8x Pt Wire*/,gRegistry.getItem(29269,2)/*4x Pt Cable*/, IL.Circuit_Master  .get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ir;              kRegistry0.add("TransFormer Part (LuV)"  , "kTFRUAddon: Multiblock", 10215, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,  32768, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.EU, NBT_TEXTURE, "elec_large")); recipeMaps.Assembler.addRecipeX(F,512,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 2), gRegistry.getItem(29807, 64)/*8x Gr Wire*/,gRegistry.getItem(29803,2)/*4x Gr Cable*/, IL.Circuit_Ultimate.get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());

        aMat = MT.SteelGalvanized; kRegistry0.add("TransFormer Part (T1)"   , "kTFRUAddon: Multiblock", 10220, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,     32, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE, "rot_small")); recipeMaps.Assembler.addRecipeX(F, 32,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28050, 8)/*1x Sn Wire*/,gRegistry.getItem(28066,2)/*1x Sn Cable*/, IL.Circuit_Basic   .get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Al;              kRegistry0.add("TransFormer Part (T2)"   , "kTFRUAddon: Multiblock", 10221, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,    128, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE, "rot_small")); recipeMaps.Assembler.addRecipeX(F, 32,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28350, 8)/*1x Cu Wire*/,gRegistry.getItem(28366,2)/*1x Cu Cable*/, IL.Circuit_Good    .get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.StainlessSteel;  kRegistry0.add("TransFormer Part (T3)"   , "kTFRUAddon: Multiblock", 10222, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,    512, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE, "rot_small")); recipeMaps.Assembler.addRecipeX(F,128,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28700, 8)/*1x Au Wire*/,gRegistry.getItem(28716,2)/*1x Au Cable*/, IL.Circuit_Advanced.get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Cr;              kRegistry0.add("TransFormer Part (T4)"   , "kTFRUAddon: Multiblock", 10223, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,   2048, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE, "rot_small")); recipeMaps.Assembler.addRecipeX(F,128,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(29000, 8)/*1x Al Wire*/,gRegistry.getItem(29016,2)/*1x Al Cable*/, IL.Circuit_Elite   .get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ti;              kRegistry0.add("TransFormer Part (T5)"   , "kTFRUAddon: Multiblock", 10224, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,   8192, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE, "rot_small")); recipeMaps.Assembler.addRecipeX(F,512,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 2), gRegistry.getItem(29250, 8)/*1x Pt Wire*/,gRegistry.getItem(29266,2)/*1x Pt Cable*/, IL.Circuit_Master  .get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ir;              kRegistry0.add("TransFormer Part (T6)"   , "kTFRUAddon: Multiblock", 10225, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,  32768, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE, "rot_small")); recipeMaps.Assembler.addRecipeX(F,512,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 2), gRegistry.getItem(29800, 8)/*1x Gr Wire*/,gRegistry.getItem(29800,2)/*1x Gr Cable*/, IL.Circuit_Ultimate.get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());

        aMat = MT.SteelGalvanized; kRegistry0.add("TransFormer Part (T1)"   , "kTFRUAddon: Multiblock", 10230, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,     32, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE, "rot_large")); recipeMaps.Assembler.addRecipeX(F, 32,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28057, 16)/*8x Sn Wire*/,gRegistry.getItem(28069,2)/*4x Sn Cable*/, IL.Circuit_Basic   .get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Al;              kRegistry0.add("TransFormer Part (T2)"   , "kTFRUAddon: Multiblock", 10231, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,    128, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE, "rot_large")); recipeMaps.Assembler.addRecipeX(F, 32,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28357, 16)/*8x Cu Wire*/,gRegistry.getItem(28369,2)/*4x Cu Cable*/, IL.Circuit_Good    .get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.StainlessSteel;  kRegistry0.add("TransFormer Part (T3)"   , "kTFRUAddon: Multiblock", 10232, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,    512, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE, "rot_large")); recipeMaps.Assembler.addRecipeX(F,128,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28707, 16)/*8x Au Wire*/,gRegistry.getItem(28719,2)/*4x Au Cable*/, IL.Circuit_Advanced.get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Cr;              kRegistry0.add("TransFormer Part (T4)"   , "kTFRUAddon: Multiblock", 10233, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,   2048, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE, "rot_large")); recipeMaps.Assembler.addRecipeX(F,128,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(29007, 16)/*8x Al Wire*/,gRegistry.getItem(29019,2)/*4x Al Cable*/, IL.Circuit_Elite   .get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ti;              kRegistry0.add("TransFormer Part (T5)"   , "kTFRUAddon: Multiblock", 10234, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,   8192, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE, "rot_large")); recipeMaps.Assembler.addRecipeX(F,512,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 2), gRegistry.getItem(29257, 16)/*8x Pt Wire*/,gRegistry.getItem(29269,2)/*4x Pt Cable*/, IL.Circuit_Master  .get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ir;              kRegistry0.add("TransFormer Part (T6)"   , "kTFRUAddon: Multiblock", 10235, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,  32768, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_TEXTURE, "rot_large")); recipeMaps.Assembler.addRecipeX(F,512,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 2), gRegistry.getItem(29807, 16)/*8x Gr Wire*/,gRegistry.getItem(29803,2)/*4x Gr Cable*/, IL.Circuit_Ultimate.get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());

        aMat = MT.SteelGalvanized; kRegistry0.add("TransFormer Part (LV)"   , "kTFRUAddon: Multiblock", 10240, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,     32, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.LU, NBT_TEXTURE, "light_small")); recipeMaps.Assembler.addRecipeX(F, 32,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28050, 8)/*1x Sn Wire*/,gRegistry.getItem(28066,2)/*1x Sn Cable*/, IL.Circuit_Basic   .get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Al;              kRegistry0.add("TransFormer Part (MV)"   , "kTFRUAddon: Multiblock", 10241, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,    128, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.LU, NBT_TEXTURE, "light_small")); recipeMaps.Assembler.addRecipeX(F, 32,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28350, 8)/*1x Cu Wire*/,gRegistry.getItem(28366,2)/*1x Cu Cable*/, IL.Circuit_Good    .get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.StainlessSteel;  kRegistry0.add("TransFormer Part (HV)"   , "kTFRUAddon: Multiblock", 10242, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,    512, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.LU, NBT_TEXTURE, "light_small")); recipeMaps.Assembler.addRecipeX(F,128,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28700, 8)/*1x Au Wire*/,gRegistry.getItem(28716,2)/*1x Au Cable*/, IL.Circuit_Advanced.get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Cr;              kRegistry0.add("TransFormer Part (EV)"   , "kTFRUAddon: Multiblock", 10243, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,   2048, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.LU, NBT_TEXTURE, "light_small")); recipeMaps.Assembler.addRecipeX(F,128,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(29000, 8)/*1x Al Wire*/,gRegistry.getItem(29016,2)/*1x Al Cable*/, IL.Circuit_Elite   .get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ti;              kRegistry0.add("TransFormer Part (IV)"   , "kTFRUAddon: Multiblock", 10244, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,   8192, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.LU, NBT_TEXTURE, "light_small")); recipeMaps.Assembler.addRecipeX(F,512,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 2), gRegistry.getItem(29250, 8)/*1x Pt Wire*/,gRegistry.getItem(29266,2)/*1x Pt Cable*/, IL.Circuit_Master  .get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ir;              kRegistry0.add("TransFormer Part (LuV)"  , "kTFRUAddon: Multiblock", 10245, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,  32768, NBT_OUTPUT+".amp",  4, NBT_ENERGY_EMITTED, TD.Energy.LU, NBT_TEXTURE, "light_small")); recipeMaps.Assembler.addRecipeX(F,512,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 2), gRegistry.getItem(29800, 8)/*1x Gr Wire*/,gRegistry.getItem(29800,2)/*1x Gr Cable*/, IL.Circuit_Ultimate.get(1)), FL.array(MT.SolderingAlloy.liquid(U2, true)),ZL_FS,kRegistry0.getItem());

        aMat = MT.SteelGalvanized; kRegistry0.add("TransFormer Part (LV)"   , "kTFRUAddon: Multiblock", 10250, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,     32, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.LU, NBT_TEXTURE, "light_large")); recipeMaps.Assembler.addRecipeX(F, 32,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28057, 16)/*8x Sn Wire*/,gRegistry.getItem(28069,2)/*4x Sn Cable*/, IL.Circuit_Basic   .get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Al;              kRegistry0.add("TransFormer Part (MV)"   , "kTFRUAddon: Multiblock", 10251, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,    128, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.LU, NBT_TEXTURE, "light_large")); recipeMaps.Assembler.addRecipeX(F, 32,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28357, 16)/*8x Cu Wire*/,gRegistry.getItem(28369,2)/*4x Cu Cable*/, IL.Circuit_Good    .get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.StainlessSteel;  kRegistry0.add("TransFormer Part (HV)"   , "kTFRUAddon: Multiblock", 10252, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,    512, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.LU, NBT_TEXTURE, "light_large")); recipeMaps.Assembler.addRecipeX(F,128,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(28707, 16)/*8x Au Wire*/,gRegistry.getItem(28719,2)/*4x Au Cable*/, IL.Circuit_Advanced.get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Cr;              kRegistry0.add("TransFormer Part (EV)"   , "kTFRUAddon: Multiblock", 10253, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,   2048, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.LU, NBT_TEXTURE, "light_large")); recipeMaps.Assembler.addRecipeX(F,128,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 1), gRegistry.getItem(29007, 16)/*8x Al Wire*/,gRegistry.getItem(29019,2)/*4x Al Cable*/, IL.Circuit_Elite   .get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ti;              kRegistry0.add("TransFormer Part (IV)"   , "kTFRUAddon: Multiblock", 10254, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,   8192, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.LU, NBT_TEXTURE, "light_large")); recipeMaps.Assembler.addRecipeX(F,512,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 2), gRegistry.getItem(29257, 16)/*8x Pt Wire*/,gRegistry.getItem(29269,2)/*4x Pt Cable*/, IL.Circuit_Master  .get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ir;              kRegistry0.add("TransFormer Part (LuV)"  , "kTFRUAddon: Multiblock", 10255, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_OUTPUT,  32768, NBT_OUTPUT+".amp", 16, NBT_ENERGY_EMITTED, TD.Energy.LU, NBT_TEXTURE, "light_large")); recipeMaps.Assembler.addRecipeX(F,512,400,ST.array(OP.casingMachine.mat(aMat,1), OP.stickLong.mat(aMat,4), OP.plateDense.mat(MT.ElectricalSteel, 2), gRegistry.getItem(29807, 16)/*8x Gr Wire*/,gRegistry.getItem(29803,2)/*4x Gr Cable*/, IL.Circuit_Ultimate.get(2)),FL.array(MT.SolderingAlloy.liquid(2*U, true)),ZL_FS,kRegistry0.getItem());


        //15000-19999 Some storages
        for (int j = 0; j < 6; j++) {
            aMat = MT.DATA.Kinetic_T[j];
            kRegistry0.add(               "Flywheel Box (" + aMat.getLocal() + ")", "ktfruaddon: Energy Storages", 15000 + j, 9201,     FlywheelBox.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 4.0F, NBT_RESISTANCE, 4.0F, NBT_INPUT_MAX, VMAX[j], NBT_OUTPUT_MIN, VMIN[j], NBT_OUTPUT_MAX, VMAX[j], NBT_INV_SIZE, 1, MAX_AMPERE,  4, LOSS_PERCENT, 0.1F    ), "WCW", "WCW", "wMh", 'C', OP.stickLong.dat(aMat), 'W', OP.screw.dat(aMat), 'M', OP.casingMachine.dat(aMat));
            kRegistry0.add(         "Large Flywheel Box (" + aMat.getLocal() + ")", "ktfruaddon: Energy Storages", 15010 + j, 9201,     FlywheelBox.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 4.0F, NBT_RESISTANCE, 4.0F, NBT_INPUT_MAX, VMAX[j], NBT_OUTPUT_MIN, VMIN[j], NBT_OUTPUT_MAX, VMAX[j], NBT_INV_SIZE, 4, MAX_AMPERE, 16, LOSS_PERCENT, 0.15F   ), "WCW", "WCW", "wMh", 'C', OP.screw.dat(aMat), 'W', OP.ingotQuadruple.dat(aMat), 'M', OP.casingMachineDouble.dat(aMat));
            kRegistry0.add(      "Electric Flywheel Box (" + aMat.getLocal() + ")", "ktfruaddon: Energy Storages", 15020 + j, 9201, FlywheelBoxElec.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 4.0F, NBT_RESISTANCE, 4.0F, NBT_INPUT_MAX, VMAX[j], NBT_OUTPUT_MIN, VMIN[j], NBT_OUTPUT_MAX, VMAX[j], NBT_INV_SIZE, 1, MAX_AMPERE,  4, LOSS_PERCENT, 0.07F   ), "WLW", "WCW", "wMh", 'M', kRegistry0.getItem(15000+j),'W',gRegistry.getItem(28351)/*2x Copper wire*/,'L',OD.itemLubricant,'C',IL.Circuit_Basic);
            kRegistry0.add("Large Electric Flywheel Box (" + aMat.getLocal() + ")", "ktfruaddon: Energy Storages", 15030 + j, 9201, FlywheelBoxElec.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 4.0F, NBT_RESISTANCE, 4.0F, NBT_INPUT_MAX, VMAX[j], NBT_OUTPUT_MIN, VMIN[j], NBT_OUTPUT_MAX, VMAX[j], NBT_INV_SIZE, 4, MAX_AMPERE, 16, LOSS_PERCENT, 0.1F    ), "WLW", "WCW", "wMh", 'M', kRegistry0.getItem(15010+j),'W',gRegistry.getItem(28351)/*2x Copper wire*/,'L',OD.itemLubricant,'C',IL.Circuit_Good);
            kRegistry0.add(        "Vacuum Flywheel Box (" + aMat.getLocal() + ")", "ktfruaddon: Energy Storages", 15040 + j, 9201, FlywheelBoxElec.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 4.0F, NBT_RESISTANCE, 4.0F, NBT_INPUT_MAX, VMAX[j], NBT_OUTPUT_MIN, VMIN[j], NBT_OUTPUT_MAX, VMAX[j], NBT_INV_SIZE, 1, MAX_AMPERE,  4, LOSS_PERCENT, 0.0001F ), "WCW", "WOW", "wMh", 'M', kRegistry0.getItem(15020+j),'W',OP.plate.dat(ANY.Rubber),'O',IL.MOTORS[j],'C',OP.rotor.dat(aMat));
            kRegistry0.add(  "Large Vacuum Flywheel Box (" + aMat.getLocal() + ")", "ktfruaddon: Energy Storages", 15050 + j, 9201, FlywheelBoxElec.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 4.0F, NBT_RESISTANCE, 4.0F, NBT_INPUT_MAX, VMAX[j], NBT_OUTPUT_MIN, VMIN[j], NBT_OUTPUT_MAX, VMAX[j], NBT_INV_SIZE, 4, MAX_AMPERE, 16, LOSS_PERCENT, 0.00012F), "WCW", "WOW", "wMh", 'M', kRegistry0.getItem(15030+j),'W',OP.plate.dat(ANY.Rubber),'O',IL.MOTORS[j],'C',OP.rotor.dat(aMat));
        }
    }

    public static void init(FMLInitializationEvent aEvent) {
        OreDictMaterial aMat;
        Class<? extends net.minecraft.tileentity.TileEntity> aClass;
        int i;
        initRandoms();
        initEnergyTiles();
        //20000-29999,Single block machines
        aClass = MultiTileEntityBasicMachine.class;
        //HU Machines,20000-20999
        i=20000;
        aMat = MT.DATA.Heat_T[1];   kRegistry0.add("Fluid Heater ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  32, NBT_TEXTURE, "fluidheater", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_INV_SIDE_IN, SBIT_I, NBT_INV_SIDE_AUTO_IN, SIDE_INSIDE, NBT_INV_SIDE_OUT, SBIT_I, NBT_INV_SIDE_AUTO_OUT, SIDE_INSIDE, NBT_TANK_SIDE_IN, SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_UP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.FluidHeating,NBT_CHEAP_OVERCLOCKING,true), " L ", "PMP", " C ", 'M', OP.casingMachine.dat(aMat), 'P', gRegistry.getItem(26742),'L',gRegistry.getItem(26744) ,'C', OP.plateDouble.mat(MT.Cu,1));
        aMat = MT.DATA.Heat_T[2];   kRegistry0.add("Fluid Heater ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 128, NBT_TEXTURE, "fluidheater", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_INV_SIDE_IN, SBIT_I, NBT_INV_SIDE_AUTO_IN, SIDE_INSIDE, NBT_INV_SIDE_OUT, SBIT_I, NBT_INV_SIDE_AUTO_OUT, SIDE_INSIDE, NBT_TANK_SIDE_IN, SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_UP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.FluidHeating,NBT_CHEAP_OVERCLOCKING,true), " L ", "PMP", " C ", 'M', OP.casingMachine.dat(aMat), 'P', gRegistry.getItem(26402),'L',gRegistry.getItem(26404) ,'C', OP.plateDouble.mat(MT.Cu,1));
        aMat = MT.DATA.Heat_T[3];   kRegistry0.add("Fluid Heater ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 512, NBT_TEXTURE, "fluidheater", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_INV_SIDE_IN, SBIT_I, NBT_INV_SIDE_AUTO_IN, SIDE_INSIDE, NBT_INV_SIDE_OUT, SBIT_I, NBT_INV_SIDE_AUTO_OUT, SIDE_INSIDE, NBT_TANK_SIDE_IN, SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_UP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.FluidHeating,NBT_CHEAP_OVERCLOCKING,true), " L ", "PMP", " C ", 'M', OP.casingMachine.dat(aMat), 'P', gRegistry.getItem(26182),'L',gRegistry.getItem(26184) ,'C', OP.plateDouble.mat(MT.Cu,1));
        aMat = MT.DATA.Heat_T[4];   kRegistry0.add("Fluid Heater ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,2048, NBT_TEXTURE, "fluidheater", NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_INV_SIDE_IN, SBIT_I, NBT_INV_SIDE_AUTO_IN, SIDE_INSIDE, NBT_INV_SIDE_OUT, SBIT_I, NBT_INV_SIDE_AUTO_OUT, SIDE_INSIDE, NBT_TANK_SIDE_IN, SBIT_B, NBT_TANK_SIDE_AUTO_IN, SIDE_BACK, NBT_TANK_SIDE_OUT, SBIT_U, NBT_TANK_SIDE_AUTO_OUT, SIDE_UP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.FluidHeating,NBT_CHEAP_OVERCLOCKING,true), " L ", "PMP", " C ", 'M', OP.casingMachine.dat(aMat), 'P', gRegistry.getItem(26242),'L',gRegistry.getItem(26244) ,'C', OP.plateDouble.mat(MT.Cu,1));

        //RU Machines,21000-21999
        i=21000;
        aClass= LightMixer.class;
        aMat = MT.DATA.Kinetic_T[1];   kRegistry0.add("Light Mixer ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  32, NBT_TEXTURE, "lightmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_INV_SIDE_IN, SBIT_L|SBIT_F, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_F, NBT_TANK_SIDE_AUTO_IN, SIDE_FRONT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.LightMixer, NBT_PARALLEL, 4, NBT_PARALLEL_DURATION, T), "PCP", "PSP", "wMh", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate         .dat(MT.StainlessSteel), 'C', OP.plate.mat(MT.Glass,1), 'S', OP.rotor.dat(MT.StainlessSteel));
        aMat = MT.DATA.Kinetic_T[2];   kRegistry0.add("Light Mixer ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 128, NBT_TEXTURE, "lightmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_INV_SIDE_IN, SBIT_L|SBIT_F, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_F, NBT_TANK_SIDE_AUTO_IN, SIDE_FRONT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.LightMixer, NBT_PARALLEL, 8, NBT_PARALLEL_DURATION, T), "PCP", "PSP", "wMh", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble   .dat(MT.StainlessSteel), 'C', OP.plate.mat(MT.Glass,1), 'S', OP.rotor.dat(MT.StainlessSteel));
        aMat = MT.DATA.Kinetic_T[3];   kRegistry0.add("Light Mixer ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 512, NBT_TEXTURE, "lightmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_INV_SIDE_IN, SBIT_L|SBIT_F, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_F, NBT_TANK_SIDE_AUTO_IN, SIDE_FRONT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.LightMixer, NBT_PARALLEL,16, NBT_PARALLEL_DURATION, T), "PCP", "PSP", "wMh", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateTriple   .dat(MT.StainlessSteel), 'C', OP.plate.mat(MT.Glass,1), 'S', OP.rotor.dat(MT.StainlessSteel));
        aMat = MT.DATA.Kinetic_T[4];   kRegistry0.add("Light Mixer ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,2048, NBT_TEXTURE, "lightmixer", NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_INV_SIDE_IN, SBIT_L|SBIT_F, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_F, NBT_TANK_SIDE_AUTO_IN, SIDE_FRONT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.LightMixer, NBT_PARALLEL,32, NBT_PARALLEL_DURATION, T), "PCP", "PSP", "wMh", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateQuadruple.dat(MT.StainlessSteel), 'C', OP.plate.mat(MT.Glass,1), 'S', OP.rotor.dat(MT.StainlessSteel));

        //KU Machines,22000-22999
        i=22000;
        aClass= tankGasCompressedInputer.class;
        aMat = MT.DATA.Kinetic_T[1];   kRegistry0.add("Gas Compressor ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  32, NBT_TEXTURE, "tankgascompressedinputer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_INV_SIDE_IN, SBIT_I, NBT_INV_SIDE_AUTO_IN, SIDE_INSIDE, NBT_INV_SIDE_OUT, SBIT_I, NBT_INV_SIDE_AUTO_OUT, SIDE_INSIDE, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_UP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_TANK_CAPACITY,8000  ), "DCD", "CSC", "wMh", 'M', OP.casingMachineDense.dat(aMat), 'D', OP.screw.dat(aMat), 'C', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
        aMat = MT.DATA.Kinetic_T[2];   kRegistry0.add("Gas Compressor ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 128, NBT_TEXTURE, "tankgascompressedinputer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_INV_SIDE_IN, SBIT_I, NBT_INV_SIDE_AUTO_IN, SIDE_INSIDE, NBT_INV_SIDE_OUT, SBIT_I, NBT_INV_SIDE_AUTO_OUT, SIDE_INSIDE, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_UP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_TANK_CAPACITY,20000 ), "DCD", "CSC", "wMh", 'M', OP.casingMachineDense.dat(aMat), 'D', OP.screw.dat(aMat), 'C', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
        aMat = MT.DATA.Kinetic_T[3];   kRegistry0.add("Gas Compressor ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 512, NBT_TEXTURE, "tankgascompressedinputer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_INV_SIDE_IN, SBIT_I, NBT_INV_SIDE_AUTO_IN, SIDE_INSIDE, NBT_INV_SIDE_OUT, SBIT_I, NBT_INV_SIDE_AUTO_OUT, SIDE_INSIDE, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_UP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_TANK_CAPACITY,80000 ), "DCD", "CSC", "wMh", 'M', OP.casingMachineDense.dat(aMat), 'D', OP.screw.dat(aMat), 'C', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
        aMat = MT.DATA.Kinetic_T[4];   kRegistry0.add("Gas Compressor ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,2048, NBT_TEXTURE, "tankgascompressedinputer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_INV_SIDE_IN, SBIT_I, NBT_INV_SIDE_AUTO_IN, SIDE_INSIDE, NBT_INV_SIDE_OUT, SBIT_I, NBT_INV_SIDE_AUTO_OUT, SIDE_INSIDE, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_UP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_TANK_CAPACITY,200000), "DCD", "CSC", "wMh", 'M', OP.casingMachineDense.dat(aMat), 'D', OP.screw.dat(aMat), 'C', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));
        aMat = MT.DATA.Kinetic_T[5];   kRegistry0.add("Gas Compressor ("+ aMat.getLocal() +")"                 , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,8192, NBT_TEXTURE, "tankgascompressedinputer", NBT_ENERGY_ACCEPTED, TD.Energy.KU, NBT_INV_SIDE_IN, SBIT_I, NBT_INV_SIDE_AUTO_IN, SIDE_INSIDE, NBT_INV_SIDE_OUT, SBIT_I, NBT_INV_SIDE_AUTO_OUT, SIDE_INSIDE, NBT_TANK_SIDE_IN, SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_UP, NBT_TANK_SIDE_OUT, SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_TANK_CAPACITY,800000), "DCD", "CSC", "wMh", 'M', OP.casingMachineDense.dat(aMat), 'D', OP.screw.dat(aMat), 'C', OP.plateCurved.dat(aMat), 'S', OP.stickLong.dat(aMat));

        //LU Machines,23000-23999
        aClass = MultiTileEntityBasicMachine.class;
        //Assembler
        i=23000;
        aMat = MT.DATA.Electric_T[1];   kRegistry0.add("Circuit Assembler (T1)"                         , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,     32, NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.Assembler, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[1], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat));
        aMat = MT.DATA.Electric_T[2];   kRegistry0.add("Circuit Assembler (T2)"                         , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,    128, NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.Assembler, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[2], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat));
        aMat = MT.DATA.Electric_T[3];   kRegistry0.add("Circuit Assembler (T3)"                         , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,    512, NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.Assembler, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[3], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat));
        aMat = MT.DATA.Electric_T[4];   kRegistry0.add("Circuit Assembler (T4)"                         , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   2048, NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.Assembler, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[4], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat));
        aMat = MT.DATA.Electric_T[5];   kRegistry0.add("Circuit Assembler (T5)"                         , "kTFRUAddon: Machines"                       , i++,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   8192, NBT_TEXTURE, "laserwelder", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.Assembler, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[5], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Yellow], 'T', OP.screw.dat(aMat), 'G', OP.gearGt.dat(aMat));
        //Laser Cutter
        i=23010;
        aMat = MT.DATA.Electric_T[1];   kRegistry0.add("Laser Cutter (T1)"                              , "kTFRUAddon: Machines"                      , i++, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   32  , NBT_TEXTURE, "lasercutter", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.LaserCutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[1], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Blue], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
        aMat = MT.DATA.Electric_T[2];   kRegistry0.add("Laser Cutter (T2)"                              , "kTFRUAddon: Machines"                      , i++, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   128 , NBT_TEXTURE, "lasercutter", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.LaserCutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[2], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Blue], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
        aMat = MT.DATA.Electric_T[3];   kRegistry0.add("Laser Cutter (T3)"                              , "kTFRUAddon: Machines"                      , i++, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   512 , NBT_TEXTURE, "lasercutter", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.LaserCutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[3], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Blue], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
        aMat = MT.DATA.Electric_T[4];   kRegistry0.add("Laser Cutter (T4)"                              , "kTFRUAddon: Machines"                      , i++, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   2048, NBT_TEXTURE, "lasercutter", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.LaserCutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[4], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Blue], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));
        aMat = MT.DATA.Electric_T[5];   kRegistry0.add("Laser Cutter (T5)"                              , "kTFRUAddon: Machines"                      , i++, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   8192, NBT_TEXTURE, "lasercutter", NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.LaserCutter, NBT_INV_SIDE_IN, SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_D|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_ENERGY_ACCEPTED_SIDES, SBIT_U), "TLT", "GPG", "CMC", 'M', OP.casingMachine.dat(aMat), 'P', OD.craftingHardenedClay, 'C', OD_CIRCUITS[5], 'L', DYE_OREDICTS_LENS[DYE_INDEX_Blue], 'T', OP.screw.dat(aMat), 'G', OP.gearGtSmall.dat(aMat));

        //TU Machines,24000-24999
        ////Ultra Clean Bath  TODO:Recipe
        //i=24000;
        //aMat = MT.DATA.Electric_T[1];   kRegistry0.add("Bath (Ultra Clean,"+VN[1]+")"    , "kTFRUAddon: Machines" , i++, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 32  , NBT_TEXTURE, "ultracleanbath",    NBT_ENERGY_ACCEPTED, TD.Energy.TU, NBT_RECIPEMAP, recipeManager.UltraCleanBath   , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T));
        //aMat = MT.DATA.Electric_T[2];   kRegistry0.add("Bath (Ultra Clean,"+VN[2]+")"    , "kTFRUAddon: Machines" , i++, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 128 , NBT_TEXTURE, "ultracleanbath",    NBT_ENERGY_ACCEPTED, TD.Energy.TU, NBT_RECIPEMAP, recipeManager.UltraCleanBath   , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T));
        //aMat = MT.DATA.Electric_T[3];   kRegistry0.add("Bath (Ultra Clean,"+VN[3]+")"    , "kTFRUAddon: Machines" , i++, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 512 , NBT_TEXTURE, "ultracleanbath",    NBT_ENERGY_ACCEPTED, TD.Energy.TU, NBT_RECIPEMAP, recipeManager.UltraCleanBath   , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T));
        //aMat = MT.DATA.Electric_T[4];   kRegistry0.add("Bath (Ultra Clean,"+VN[4]+")"    , "kTFRUAddon: Machines" , i++, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 2048, NBT_TEXTURE, "ultracleanbath",    NBT_ENERGY_ACCEPTED, TD.Energy.TU, NBT_RECIPEMAP, recipeManager.UltraCleanBath   , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T));
        //aMat = MT.DATA.Electric_T[5];   kRegistry0.add("Bath (Ultra Clean,"+VN[5]+")"    , "kTFRUAddon: Machines" , i++, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 8192, NBT_TEXTURE, "ultracleanbath",    NBT_ENERGY_ACCEPTED, TD.Energy.TU, NBT_RECIPEMAP, recipeManager.UltraCleanBath   , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T));

        //CU Machines,25000-25999

        //QU Machines,26000-26999

        //EU Machines,27000-28999
        aClass = MultiTileEntityBasicMachineElectric.class;
        //Heat Mixer
        aMat = MT.DATA.Electric_T[1];   kRegistry0.add("Heat Mixer ("+VN[1]+")"          , "kTFRUAddon: Machines" , 27000, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,   32, NBT_TEXTURE, "heatmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.HeatMixer        , NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_UP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_USE_OUTPUT_TANK, T), "PMP", "XRX", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[1], 'R', OP.rotor.dat(MT.StainlessSteel), 'X', OP.wireGt02.dat(MT.Cupronickel),'P', OP.plate      .dat(MT.StainlessSteel));
        aMat = MT.DATA.Electric_T[2];   kRegistry0.add("Heat Mixer ("+VN[2]+")"          , "kTFRUAddon: Machines" , 27001, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  128, NBT_TEXTURE, "heatmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.HeatMixer        , NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_UP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_USE_OUTPUT_TANK, T), "PMP", "XRX", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[2], 'R', OP.rotor.dat(MT.StainlessSteel), 'X', OP.wireGt04.dat(MT.Cupronickel),'P', OP.plateDouble.dat(MT.StainlessSteel));
        aMat = MT.DATA.Electric_T[3];   kRegistry0.add("Heat Mixer ("+VN[3]+")"          , "kTFRUAddon: Machines" , 27002, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  512, NBT_TEXTURE, "heatmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.HeatMixer        , NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_UP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_USE_OUTPUT_TANK, T), "PMP", "XRX", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[3], 'R', OP.rotor.dat(MT.StainlessSteel), 'X', OP.wireGt08.dat(MT.Cupronickel),'P', OP.plateTriple.dat(MT.StainlessSteel));
        aMat = MT.DATA.Electric_T[4];   kRegistry0.add("Heat Mixer ("+VN[4]+")"          , "kTFRUAddon: Machines" , 27003, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 2048, NBT_TEXTURE, "heatmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.HeatMixer        , NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_UP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_USE_OUTPUT_TANK, T), "PMP", "XRX", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[4], 'R', OP.rotor.dat(MT.StainlessSteel), 'X', OP.wireGt04.dat(MT.Nichrome   ),'P', OP.plateDouble.dat(MT.Cr            ));
        aMat = MT.DATA.Electric_T[5];   kRegistry0.add("Heat Mixer ("+VN[5]+")"          , "kTFRUAddon: Machines" , 27004, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 8192, NBT_TEXTURE, "heatmixer", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.HeatMixer        , NBT_INV_SIDE_IN, SBIT_L|SBIT_U, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_U, NBT_TANK_SIDE_AUTO_IN, SIDE_UP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_USE_OUTPUT_TANK, T), "PMP", "XRX", "hSw", 'M', OP.casingMachine.dat(aMat), 'S', IL.MOTORS[5], 'R', OP.rotor.dat(MT.StainlessSteel), 'X', OP.wireGt08.dat(MT.Nichrome   ),'P', OP.plateTriple.dat(MT.Cr            ));

        ////CVD Machine  TODO:Recipe
        //i=27020;
        //aClass= testGuiMachine.class;
        //aMat = MT.DATA.Electric_T[1];   kRegistry0.add("CVD Machine ("+VN[1]+")"         , "kTFRUAddon: Machines" , 27020, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 32  , NBT_TEXTURE, "cvdmachine" ,       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeManager.CVD              , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T));
        //aMat = MT.DATA.Electric_T[2];   kRegistry0.add("CVD Machine ("+VN[2]+")"         , "kTFRUAddon: Machines" , 27021, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 128 , NBT_TEXTURE, "cvdmachine" ,       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeManager.CVD              , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T));
        //aMat = MT.DATA.Electric_T[3];   kRegistry0.add("CVD Machine ("+VN[3]+")"         , "kTFRUAddon: Machines" , 27022, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 512 , NBT_TEXTURE, "cvdmachine" ,       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeManager.CVD              , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T));
        //aMat = MT.DATA.Electric_T[4];   kRegistry0.add("CVD Machine ("+VN[4]+")"         , "kTFRUAddon: Machines" , 27023, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 2048, NBT_TEXTURE, "cvdmachine" ,       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeManager.CVD              , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T));
        //aMat = MT.DATA.Electric_T[5];   kRegistry0.add("CVD Machine ("+VN[5]+")"         , "kTFRUAddon: Machines" , 27024, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 8192, NBT_TEXTURE, "cvdmachine" ,       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeManager.CVD              , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T));

        //EDA Machine
        aMat = MT.DATA.Electric_T[1];   kRegistry0.add("Electronics Designer ("+VN[1]+")", "kTFRUAddon: Machines" , 27030, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 32  , NBT_TEXTURE, "eda"      ,              NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.EDA        ,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_L       , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT  , NBT_INV_SIDE_OUT, SBIT_R       , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN,  SBIT_U      , NBT_TANK_SIDE_AUTO_IN, SIDE_UP,   NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"BSB","BCB","BwB",'B',OD_CIRCUITS[2],'C',OP.casingMachine.mat(aMat,1),'S',OP.plate.mat(MT.Glass,1));
        aMat = MT.DATA.Electric_T[2];   kRegistry0.add("Electronics Designer ("+VN[2]+")", "kTFRUAddon: Machines" , 27031, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 128 , NBT_TEXTURE, "eda"      ,              NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.EDA        ,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_L       , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT  , NBT_INV_SIDE_OUT, SBIT_R       , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN,  SBIT_U      , NBT_TANK_SIDE_AUTO_IN, SIDE_UP,   NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"BSB","PCP","BwB",'B',"ktfruBasicComputer",'C',OP.casingMachine.mat(aMat,1),'S',OP.plate.mat(MT.Glass,1),'P',OP.plate.mat(aMat,1));
        aMat = MT.DATA.Electric_T[3];   kRegistry0.add("Electronics Designer ("+VN[3]+")", "kTFRUAddon: Machines" , 27032, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 512 , NBT_TEXTURE, "eda"      ,              NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.EDA        ,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_L       , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT  , NBT_INV_SIDE_OUT, SBIT_R       , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN,  SBIT_U      , NBT_TANK_SIDE_AUTO_IN, SIDE_UP,   NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"BSB","PCP","BwB",'B',"ktfruNoviceComputer",'C',OP.casingMachine.mat(aMat,1),'S',OP.plate.mat(MT.Glass,1),'P',OP.plate.mat(aMat,1));
        aMat = MT.DATA.Electric_T[4];   kRegistry0.add("Electronics Designer ("+VN[4]+")", "kTFRUAddon: Machines" , 27033, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 2048, NBT_TEXTURE, "eda"      ,              NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.EDA        ,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_L       , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT  , NBT_INV_SIDE_OUT, SBIT_R       , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN,  SBIT_U      , NBT_TANK_SIDE_AUTO_IN, SIDE_UP,   NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"BSB","PCP","BwB",'B',"ktfruModerateComputer",'C',OP.casingMachine.mat(aMat,1),'S',OP.plate.mat(MT.Glass,1),'P',OP.plate.mat(aMat,1));
        aMat = MT.DATA.Electric_T[5];   kRegistry0.add("Electronics Designer ("+VN[5]+")", "kTFRUAddon: Machines" , 27034, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 8192, NBT_TEXTURE, "eda"      ,              NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.EDA        ,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_L       , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT  , NBT_INV_SIDE_OUT, SBIT_R       , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN,  SBIT_U      , NBT_TANK_SIDE_AUTO_IN, SIDE_UP,   NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"BSB","PCP","BwB",'B',"ktfruAdvancedComputer",'C',OP.casingMachine.mat(aMat,1),'S',OP.plate.mat(MT.Glass,1),'P',OP.plate.mat(aMat,1));
        //Flaw Detector
        aMat = MT.DATA.Electric_T[1];   kRegistry0.add("Flaw Detector ("+VN[1]+")", "kTFRUAddon: Machines" , 27040, 20001, FlawDetector.class, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 32  , NBT_TEXTURE, "flawdetector"      ,              NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.FlawDetector        ,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_L       , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT  , NBT_INV_SIDE_OUT, SBIT_R       , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN,  SBIT_U      , NBT_TANK_SIDE_AUTO_IN, SIDE_UP,   NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"wPO","C S","WMW",'C',ItemList.Co60FlawDetectionCore, 'M', OP.casingMachine.dat(aMat),'S',IL.Sensor_MV,'O',"ktfruBasicComputer"   ,'W', gRegistry.getItem(28351),'P',OP.plate.dat(aMat));
        aMat = MT.DATA.Electric_T[2];   kRegistry0.add("Flaw Detector ("+VN[2]+")", "kTFRUAddon: Machines" , 27041, 20001, FlawDetector.class, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 128 , NBT_TEXTURE, "flawdetector"      ,              NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.FlawDetector        ,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_L       , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT  , NBT_INV_SIDE_OUT, SBIT_R       , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN,  SBIT_U      , NBT_TANK_SIDE_AUTO_IN, SIDE_UP,   NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"wPO","C S","WMW",'C',ItemList.Co60FlawDetectionCore, 'M', OP.casingMachine.dat(aMat),'S',IL.Sensor_HV,'O',"ktfruNoviceComputer"  ,'W', gRegistry.getItem(28701),'P',OP.plate.dat(aMat));
        aMat = MT.DATA.Electric_T[3];   kRegistry0.add("Flaw Detector ("+VN[3]+")", "kTFRUAddon: Machines" , 27042, 20001, FlawDetector.class, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 512 , NBT_TEXTURE, "flawdetector"      ,              NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.FlawDetector        ,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_L       , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT  , NBT_INV_SIDE_OUT, SBIT_R       , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN,  SBIT_U      , NBT_TANK_SIDE_AUTO_IN, SIDE_UP,   NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"wPO","C S","WMW",'C',ItemList.Co60FlawDetectionCore, 'M', OP.casingMachine.dat(aMat),'S',IL.Sensor_EV,'O',"ktfruModerateComputer",'W', gRegistry.getItem(28401),'P',OP.plate.dat(aMat));
        aMat = MT.DATA.Electric_T[4];   kRegistry0.add("Flaw Detector ("+VN[4]+")", "kTFRUAddon: Machines" , 27043, 20001, FlawDetector.class, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 2048, NBT_TEXTURE, "flawdetector"      ,              NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.FlawDetector        ,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_L       , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT  , NBT_INV_SIDE_OUT, SBIT_R       , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN,  SBIT_U      , NBT_TANK_SIDE_AUTO_IN, SIDE_UP,   NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"wPO","C S","WMW",'C',ItemList.Co60FlawDetectionCore, 'M', OP.casingMachine.dat(aMat),'S',IL.Sensor_IV,'O',"ktfruAdvancedComputer",'W', gRegistry.getItem(29001),'P',OP.plate.dat(aMat));
        aMat = MT.DATA.Electric_T[5];   kRegistry0.add("Flaw Detector ("+VN[5]+")", "kTFRUAddon: Machines" , 27044, 20001, FlawDetector.class, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 8192, NBT_TEXTURE, "flawdetector"      ,              NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.FlawDetector        ,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_L       , NBT_INV_SIDE_AUTO_IN, SIDE_LEFT  , NBT_INV_SIDE_OUT, SBIT_R       , NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN,  SBIT_U      , NBT_TANK_SIDE_AUTO_IN, SIDE_UP,   NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"wPO","C S","WMW",'C',ItemList.Co60FlawDetectionCore, 'M', OP.casingMachine.dat(aMat),'S',IL.Sensor_LuV,'O',"ktfruEliteComputer"  ,'W', gRegistry.getItem(29251),'P',OP.plate.dat(aMat));

        //EU Light Mixer
        aMat = MT.DATA.Electric_T[1];   kRegistry0.add("Electric Light Mixer ("+VN[1]+")", "kTFRUAddon: Machines", 27050,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,  32, NBT_TEXTURE, "lightmixerelectric", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_INV_SIDE_IN, SBIT_L|SBIT_F, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_F, NBT_TANK_SIDE_AUTO_IN, SIDE_FRONT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.LightMixer, NBT_PARALLEL, 4, NBT_PARALLEL_DURATION, T), "PLP", "PSP", "COM", 'M', OP.casingMachine.dat(aMat), 'P', OP.plate      .dat(MT.StainlessSteel), 'L', ItemList.LEDSet.get(1), 'S', OP.rotor.dat(MT.StainlessSteel), 'O', IL.MOTORS[1], 'C', OD_CIRCUITS[1]);
        aMat = MT.DATA.Electric_T[2];   kRegistry0.add("Electric Light Mixer ("+VN[2]+")", "kTFRUAddon: Machines", 27051,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 128, NBT_TEXTURE, "lightmixerelectric", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_INV_SIDE_IN, SBIT_L|SBIT_F, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_F, NBT_TANK_SIDE_AUTO_IN, SIDE_FRONT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.LightMixer, NBT_PARALLEL, 8, NBT_PARALLEL_DURATION, T), "PLP", "PSP", "COM", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(MT.StainlessSteel), 'L', ItemList.LEDSet.get(1), 'S', OP.rotor.dat(MT.StainlessSteel), 'O', IL.MOTORS[2], 'C', OD_CIRCUITS[2]);
        aMat = MT.DATA.Electric_T[3];   kRegistry0.add("Electric Light Mixer ("+VN[3]+")", "kTFRUAddon: Machines", 27052,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 512, NBT_TEXTURE, "lightmixerelectric", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_INV_SIDE_IN, SBIT_L|SBIT_F, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_F, NBT_TANK_SIDE_AUTO_IN, SIDE_FRONT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.LightMixer, NBT_PARALLEL,16, NBT_PARALLEL_DURATION, T), "PLP", "PSP", "COM", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateTriple.dat(MT.StainlessSteel), 'L', ItemList.LEDSet.get(1), 'S', OP.rotor.dat(MT.StainlessSteel), 'O', IL.MOTORS[3], 'C', OD_CIRCUITS[3]);
        aMat = MT.DATA.Electric_T[4];   kRegistry0.add("Electric Light Mixer ("+VN[4]+")", "kTFRUAddon: Machines", 27053,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,2048, NBT_TEXTURE, "lightmixerelectric", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_INV_SIDE_IN, SBIT_L|SBIT_F, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_F, NBT_TANK_SIDE_AUTO_IN, SIDE_FRONT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.LightMixer, NBT_PARALLEL,32, NBT_PARALLEL_DURATION, T), "PLP", "PSP", "COM", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateDouble.dat(MT.Cr            ), 'L', ItemList.LEDSet.get(1), 'S', OP.rotor.dat(MT.Cr            ), 'O', IL.MOTORS[4], 'C', OD_CIRCUITS[4]);
        aMat = MT.DATA.Electric_T[5];   kRegistry0.add("Electric Light Mixer ("+VN[5]+")", "kTFRUAddon: Machines", 27054,20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT,8192, NBT_TEXTURE, "lightmixerelectric", NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_INV_SIDE_IN, SBIT_L|SBIT_F, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_B, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_L|SBIT_F, NBT_TANK_SIDE_AUTO_IN, SIDE_FRONT, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_B, NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK, NBT_ENERGY_ACCEPTED_SIDES, SBIT_D, NBT_RECIPEMAP, recipeMaps.LightMixer, NBT_PARALLEL,64, NBT_PARALLEL_DURATION, T), "PLP", "PSP", "COM", 'M', OP.casingMachine.dat(aMat), 'P', OP.plateTriple.dat(MT.Cr            ), 'L', ItemList.LEDSet.get(1), 'S', OP.rotor.dat(MT.Cr            ), 'O', IL.MOTORS[5], 'C', OD_CIRCUITS[5]);

        //Wafer Tester
        aMat = MT.DATA.Electric_T[1];   kRegistry0.add("Wafer Tester ("+VN[1]+")"        , "kTFRUAddon: Machines", 27500, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 32  , NBT_TEXTURE, "wafertester",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.WaferTester,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"PLP","SwE","BCB",'E',IL.Emitter_MV.get(1),'S',IL.Sensor_MV.get(1),'L',DYE_OREDICTS_LENS[DYE_INDEX_Red],'C',OP.casingMachine.mat(aMat,1),'B',OD_CIRCUITS[2],'P',OP.plate.mat(aMat,1));
        aMat = MT.DATA.Electric_T[2];   kRegistry0.add("Wafer Tester ("+VN[2]+")"        , "kTFRUAddon: Machines", 27501, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 128 , NBT_TEXTURE, "wafertester",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.WaferTester,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"PLP","SwE","BCB",'E',IL.Emitter_HV.get(1),'S',IL.Sensor_HV.get(1),'L',DYE_OREDICTS_LENS[DYE_INDEX_Red],'C',OP.casingMachine.mat(aMat,1),'B',OD_CIRCUITS[4],'P',OP.plate.mat(aMat,1)); CR.shaped(kRegistry0.getItem(27501),DEF,"PLP","SwE","BCB",'E',IL.Emitter_HV.get(1),'S',IL.Sensor_HV.get(1),'L',DYE_OREDICTS_LENS[DYE_INDEX_Red],'C',OP.casingMachine.mat(aMat,1),'B',"ktfruBasicComputer",'P',OP.plate.mat(aMat,1));
        aMat = MT.DATA.Electric_T[3];   kRegistry0.add("Wafer Tester ("+VN[3]+")"        , "kTFRUAddon: Machines", 27502, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 512 , NBT_TEXTURE, "wafertester",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.WaferTester,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"PLP","SwE","BCB",'E',IL.Emitter_EV.get(1),'S',IL.Sensor_EV.get(1),'L',DYE_OREDICTS_LENS[DYE_INDEX_Red],'C',OP.casingMachine.mat(aMat,1),'B',OD_CIRCUITS[6],'P',OP.plate.mat(aMat,1)); CR.shaped(kRegistry0.getItem(27502),DEF,"PLP","SwE","BCB",'E',IL.Emitter_EV.get(1),'S',IL.Sensor_EV.get(1),'L',DYE_OREDICTS_LENS[DYE_INDEX_Red],'C',OP.casingMachine.mat(aMat,1),'B',"ktfruNoviceComputer",'P',OP.plate.mat(aMat,1));
        aMat = MT.DATA.Electric_T[4];   kRegistry0.add("Wafer Tester ("+VN[4]+")"        , "kTFRUAddon: Machines", 27503, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 2048, NBT_TEXTURE, "wafertester",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.WaferTester,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"PLP","SwE","BCB",'E',IL.Emitter_IV.get(1),'S',IL.Sensor_IV.get(1),'L',DYE_OREDICTS_LENS[DYE_INDEX_Red],'C',OP.casingMachine.mat(aMat,1),'B',"ktfruModerateComputer",'P',OP.plate.mat(aMat,1));
        aMat = MT.DATA.Electric_T[5];   kRegistry0.add("Wafer Tester ("+VN[5]+")"        , "kTFRUAddon: Machines", 27504, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 8192, NBT_TEXTURE, "wafertester",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.WaferTester,NBT_CHEAP_OVERCLOCKING,true, NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"PLP","SwE","BCB",'E',IL.Emitter_LuV.get(1),'S',IL.Sensor_LuV.get(1),'L',DYE_OREDICTS_LENS[DYE_INDEX_Red],'C',OP.casingMachine.mat(aMat,1),'B',"ktfruAdvancedComputer",'P',OP.plate.mat(aMat,1));
        //Wafer Coater
        aMat = MT.DATA.Electric_T[1];   kRegistry0.add("Wafer Coater ("+VN[1]+")"        , "kTFRUAddon: Machines", 27510, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 32  , NBT_TEXTURE, "wafercoater",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.WaferCoater      , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"WPW","wSC","BMR",'B',OD_CIRCUITS[2]         ,'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_LV .get(1),'P',gRegistry.getItem(26261)/*aMat small pipe*/,'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(28351)/*2x Copper wire*/);
        aMat = MT.DATA.Electric_T[2];   kRegistry0.add("Wafer Coater ("+VN[2]+")"        , "kTFRUAddon: Machines", 27511, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 128 , NBT_TEXTURE, "wafercoater",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.WaferCoater      , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"WPW","wSC","BMR",'B',OD_CIRCUITS[4]         ,'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_MV .get(1),'P',gRegistry.getItem(26342)/*aMat pipe*/,      'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(28701)/*2x Gold wire*/);           CR.shaped(kRegistry0.getItem(27511),DEF,"WPW","wSC","BMR",'B',"ktfruBasicComputer", 'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_MV .get(1),'P',gRegistry.getItem(26342)/*aMat pipe*/,      'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(28701));
        aMat = MT.DATA.Electric_T[3];   kRegistry0.add("Wafer Coater ("+VN[3]+")"        , "kTFRUAddon: Machines", 27512, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 512 , NBT_TEXTURE, "wafercoater",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.WaferCoater      , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"WPW","wSC","BMR",'B',OD_CIRCUITS[6]         ,'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_HV .get(1),'P',gRegistry.getItem(26261)/*aMat pipe*/,      'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(28401)/*2x Annealed Copper wire*/);CR.shaped(kRegistry0.getItem(27512),DEF,"WPW","wSC","BMR",'B',"ktfruNoviceComputer",'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_HV .get(1),'P',gRegistry.getItem(26261)/*aMat pipe*/,      'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(28401));
        aMat = MT.DATA.Electric_T[4];   kRegistry0.add("Wafer Coater ("+VN[4]+")"        , "kTFRUAddon: Machines", 27513, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 2048, NBT_TEXTURE, "wafercoater",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.WaferCoater      , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"WPW","wSC","BMR",'B',"ktfruModerateComputer",'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_EV .get(1),'P',gRegistry.getItem(26282)/*aMat pipe*/,      'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(29001)/*2x Al wire*/);
        aMat = MT.DATA.Electric_T[5];   kRegistry0.add("Wafer Coater ("+VN[5]+")"        , "kTFRUAddon: Machines", 27514, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 8192, NBT_TEXTURE, "wafercoater",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.WaferCoater      , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"WPW","wSC","BMR",'B',"ktfruAdvancedComputer",'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_LuV.get(1),'P',gRegistry.getItem(26182)/*aMat pipe*/,      'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(29251)/*2x Pt wire*/);

        aClass=Miner.class;
        aMat = MT.DATA.Electric_T[0];   kRegistry0.add("Miner (RF)",                "kTFRUAddon: Machines", 27520, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ENERGY_ACCEPTED, TD.Energy.RF, NBT_INPUT, 128, kTileNBT.MAX_RANGE, 4,kTileNBT.MINER_SPEED, 1, kTileNBT.MINER_MAX_HARDNESS,  8),"wSC","IGP","CPM",'P',OP.plateQuadruple.dat(aMat),'M',OP.casingMachineDouble.dat(aMat),'I',OP.ingotQuadruple.dat(aMat),'C',OD_CIRCUITS[0],'S',IL.SENSORS[0],'G',OP.gearGt.dat(aMat));
        aMat = MT.DATA.Electric_T[1];   kRegistry0.add("Miner ("+VN[1]+")",         "kTFRUAddon: Machines", 27521, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_INPUT,  32, kTileNBT.MAX_RANGE,12,kTileNBT.MINER_SPEED, 4, kTileNBT.MINER_MAX_HARDNESS, 20),"wSC","IGP","CPM",'P',OP.plateQuadruple.dat(aMat),'M',OP.casingMachineDouble.dat(aMat),'I',OP.ingotQuadruple.dat(aMat),'C',OD_CIRCUITS[1],'S',IL.SENSORS[1],'G',OP.gearGt.dat(aMat));
        aMat = MT.DATA.Electric_T[2];   kRegistry0.add("Miner ("+VN[2]+")",         "kTFRUAddon: Machines", 27522, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_INPUT, 128, kTileNBT.MAX_RANGE,20,kTileNBT.MINER_SPEED, 6, kTileNBT.MINER_MAX_HARDNESS, 32),"wSC","IGP","CPM",'P',OP.plateQuadruple.dat(aMat),'M',OP.casingMachineDouble.dat(aMat),'I',OP.ingotQuadruple.dat(aMat),'C',OD_CIRCUITS[2],'S',IL.SENSORS[2],'G',OP.gearGt.dat(aMat));
        aMat = MT.DATA.Electric_T[3];   kRegistry0.add("Miner ("+VN[3]+")",         "kTFRUAddon: Machines", 27523, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_INPUT, 512, kTileNBT.MAX_RANGE,32,kTileNBT.MINER_SPEED, 8, kTileNBT.MINER_MAX_HARDNESS, 64),"wSC","IGP","CPM",'P',OP.plateQuadruple.dat(aMat),'M',OP.casingMachineDouble.dat(aMat),'I',OP.ingotQuadruple.dat(aMat),'C',OD_CIRCUITS[3],'S',IL.SENSORS[3],'G',OP.gearGt.dat(aMat));

        aClass=TileOreScanner.class;
        aMat = MT.DATA.Electric_T[0];   if(isBotaniaTFRU)kRegistry0.add("Ore Scanner (RF)"         , "kTFRUAddon: Machines", 27530, 20001, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   2.0F, NBT_RESISTANCE,  2.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ENERGY_ACCEPTED, TD.Energy.RF, NBT_INPUT, 256, kTileNBT.MAX_RANGE, 1, kTileNBT.MINER_SPEED, 1, kTileNBT.INTERVAL, 20), "CwC","GMR","SES",'C',OD_CIRCUITS[0],'G',OP.dust.dat(ANY.Glowstone),'M',OP.casingMachine.dat(aMat),'R',LibOreDict.RUNE[8],'S',IL.SENSORS[0],'E',IL.EMITTERS[0]);
        aMat = MT.DATA.Electric_T[1];   if(isBotaniaTFRU)kRegistry0.add("Ore Scanner ("+VN[1]+")"  , "kTFRUAddon: Machines", 27531, 20001, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   2.0F, NBT_RESISTANCE,  2.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_INPUT, 128, kTileNBT.MAX_RANGE, 1, kTileNBT.MINER_SPEED, 1, kTileNBT.INTERVAL, 10), "CwC","GMR","SES",'C',OD_CIRCUITS[1],'G',OP.dust.dat(ANY.Glowstone),'M',OP.casingMachine.dat(aMat),'R',LibOreDict.RUNE[8],'S',IL.SENSORS[1],'E',IL.EMITTERS[1]);
        aMat = MT.DATA.Electric_T[2];   if(isBotaniaTFRU)kRegistry0.add("Ore Scanner ("+VN[2]+")"  , "kTFRUAddon: Machines", 27532, 20001, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   2.0F, NBT_RESISTANCE,  2.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_INPUT, 512, kTileNBT.MAX_RANGE, 2, kTileNBT.MINER_SPEED, 1, kTileNBT.INTERVAL,  3), "CwC","GMR","SES",'C',OD_CIRCUITS[2],'G',OP.dust.dat(ANY.Glowstone),'M',OP.casingMachine.dat(aMat),'R',LibOreDict.RUNE[8],'S',IL.SENSORS[2],'E',IL.EMITTERS[2]);
        aMat = MT.DATA.Electric_T[3];   if(isBotaniaTFRU)kRegistry0.add("Ore Scanner ("+VN[3]+")"  , "kTFRUAddon: Machines", 27533, 20001, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   2.0F, NBT_RESISTANCE,  2.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_INPUT,2048, kTileNBT.MAX_RANGE, 4, kTileNBT.MINER_SPEED, 2, kTileNBT.INTERVAL,  1), "CwC","GMR","SES",'C',OD_CIRCUITS[3],'G',OP.dust.dat(ANY.Glowstone),'M',OP.casingMachine.dat(aMat),'R',LibOreDict.RUNE[8],'S',IL.SENSORS[3],'E',IL.EMITTERS[3]);

        ////Fuel Deburner
        //aMat = MT.DATA.Electric_T[1];   kRegistry0.add("Fuel Deburner ("+VN[1]+")"       , "kTFRUAddon: Machines", 27530, 20001, FuelDeburner.class, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 32  , NBT_TEXTURE, "wafercoater",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_ENERGY_ACCEPTED_2, TD.Energy.HU, NBT_TEMPERATURE+".max", 4096, "ktfru.nbt.massSelf",1000, NBT_RECIPEMAP, recipeMaps.FuelDeburner      , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"WPW","wSC","BMR",'B',OD_CIRCUITS[2]         ,'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_LV .get(1),'P',gRegistry.getItem(26261)/*aMat small pipe*/,'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(28351)/*2x Copper wire*/);
        //aMat = MT.DATA.Electric_T[2];   kRegistry0.add("Fuel Deburner ("+VN[2]+")"       , "kTFRUAddon: Machines", 27531, 20001, FuelDeburner.class, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 128 , NBT_TEXTURE, "wafercoater",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_ENERGY_ACCEPTED_2, TD.Energy.HU, NBT_TEMPERATURE+".max", 4096, "ktfru.nbt.massSelf",1000, NBT_RECIPEMAP, recipeMaps.FuelDeburner      , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"WPW","wSC","BMR",'B',OD_CIRCUITS[4]         ,'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_MV .get(1),'P',gRegistry.getItem(26342)/*aMat pipe*/,      'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(28701)/*2x Gold wire*/);           CR.shaped(kRegistry0.getItem(27511),DEF,"WPW","wSC","BMR",'B',"ktfruBasicComputer", 'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_MV .get(1),'P',gRegistry.getItem(26342)/*aMat pipe*/,      'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(28701));
        //aMat = MT.DATA.Electric_T[3];   kRegistry0.add("Fuel Deburner ("+VN[3]+")"       , "kTFRUAddon: Machines", 27532, 20001, FuelDeburner.class, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 512 , NBT_TEXTURE, "wafercoater",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_ENERGY_ACCEPTED_2, TD.Energy.HU, NBT_TEMPERATURE+".max", 4096, "ktfru.nbt.massSelf",1000, NBT_RECIPEMAP, recipeMaps.FuelDeburner      , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"WPW","wSC","BMR",'B',OD_CIRCUITS[6]         ,'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_HV .get(1),'P',gRegistry.getItem(26261)/*aMat pipe*/,      'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(28401)/*2x Annealed Copper wire*/);CR.shaped(kRegistry0.getItem(27512),DEF,"WPW","wSC","BMR",'B',"ktfruNoviceComputer",'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_HV .get(1),'P',gRegistry.getItem(26261)/*aMat pipe*/,      'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(28401));
        //aMat = MT.DATA.Electric_T[4];   kRegistry0.add("Fuel Deburner ("+VN[4]+")"       , "kTFRUAddon: Machines", 27533, 20001, FuelDeburner.class, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 2048, NBT_TEXTURE, "wafercoater",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_ENERGY_ACCEPTED_2, TD.Energy.HU, NBT_TEMPERATURE+".max", 4096, "ktfru.nbt.massSelf",1000, NBT_RECIPEMAP, recipeMaps.FuelDeburner      , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"WPW","wSC","BMR",'B',"ktfruModerateComputer",'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_EV .get(1),'P',gRegistry.getItem(26282)/*aMat pipe*/,      'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(29001)/*2x Al wire*/);
        //aMat = MT.DATA.Electric_T[5];   kRegistry0.add("Fuel Deburner ("+VN[5]+")"       , "kTFRUAddon: Machines", 27534, 20001, FuelDeburner.class, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 8192, NBT_TEXTURE, "wafercoater",       NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_ENERGY_ACCEPTED_2, TD.Energy.HU, NBT_TEMPERATURE+".max", 4096, "ktfru.nbt.massSelf",1000, NBT_RECIPEMAP, recipeMaps.FuelDeburner      , NBT_INV_SIDE_IN, SBIT_U|SBIT_L, NBT_INV_SIDE_AUTO_IN, SIDE_LEFT, NBT_INV_SIDE_OUT, SBIT_R|SBIT_D, NBT_INV_SIDE_AUTO_OUT, SIDE_RIGHT, NBT_TANK_SIDE_IN, SBIT_U|SBIT_L, NBT_TANK_SIDE_AUTO_IN, SIDE_TOP, NBT_TANK_SIDE_OUT, SBIT_R|SBIT_D, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_ENERGY_ACCEPTED_SIDES, SBIT_B, NBT_USE_OUTPUT_TANK, T),"WPW","wSC","BMR",'B',"ktfruAdvancedComputer",'S',OP.plate.mat(aMat,1),'C',OP.casingMachine.mat(aMat,1),'M',IL.Electric_Motor_LuV.get(1),'P',gRegistry.getItem(26182)/*aMat pipe*/,      'R',OP.stick.mat(aMat,1),'W',gRegistry.getItem(29251)/*2x Pt wire*/);

        //i=28990;
        //aClass= exampleMachine.class;
        //aMat = MT.DATA.Electric_T[1];   kRegistry0.add("Example Machine ("+VN[1]+")"        , "kTFRUAddon: Machines" , i++, 20001, aClass, aMat.mToolQuality, 16, aMachine     , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   4.0F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_INPUT, 32,NBT_INPUT_MIN,16,NBT_INPUT_MAX,64 ,NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_INV_SIDE_AUTO_IN,SIDE_FRONT, /*Use this as another inv autoIn*/NBT_TANK_SIDE_AUTO_IN,SIDE_BACK,NBT_INV_SIDE_AUTO_OUT,SIDE_UP));
        //RF Machines,29000-29999

    //Multiblock

        //testMachine
        //kRegistry0.add("ktest Large Bathing Vat" , "Example Mod", i++, 0, exampleMachineComplex.class , MT.StainlessSteel.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, MT.StainlessSteel, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "klargebath"               , NBT_INPUT,    1                      , NBT_ENERGY_ACCEPTED, TD.Energy.TU, NBT_RECIPEMAP, RM.Bath     , NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM, NBT_TANK_SIDE_AUTO_OUT, SIDE_BOTTOM                           , NBT_PARALLEL,  64                          , NBT_NO_CONSTANT_POWER, T), "CRC", "PMP", "APA", 'M', kRegistry0.getItem(12000), 'R', IL.Processor_Crystal_Ruby, 'C', OD_CIRCUITS[6], 'P', OP.plateDense.dat(MT.StainlessSteel), 'A', IL.ROBOT_ARMS[2]);

        //aMat = MT.StainlessSteel;              kRegistry0.add("CNC Machine", "kTFRUAddon: Multiblock", 30001, 17200, CNCMachine.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F,NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "CNCMachine", NBT_INPUT, 128,NBT_INPUT_MIN , 64, NBT_INPUT_MAX,256, NBT_ENERGY_ACCEPTED, TD.Energy.EU),
        //        "SLS", "XwX", "CMC", 'L',  DYE_OREDICTS_LENS[DYE_INDEX_Blue], 'S', OP.stickLong.dat(aMat), 'X', OP.wireGt02.dat(MT.Cu), 'C', CS.OD_CIRCUITS[2], 'M', OP.casingMachine.dat(aMat));


        //aMat = MT.Osmiridium;      kRegistry0.add("Particle Collider"  , "kTFRUAddon: MultiBlock", 30002, 17200, particleCollider.class    , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  12.5F, NBT_RESISTANCE,  12.5F, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "particlecollider"        , NBT_INPUT, 8192, NBT_INPUT_MIN,    1, NBT_INPUT_MAX,   524288  , NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeManager.ParticleCollider     , NBT_ENERGY_ACCEPTED_2, TD.Energy.EU, NBT_SPECIAL_IS_START_ENERGY, T),
         //       "FFF", "FMF", "FFF", 'M', kRegistry0.getItem(18014), 'F', IL.FIELD_GENERATORS[5]);

        aMat = MT.Al;              kRegistry0.add("Mask Aligner (UV)"                                  , "kTFRUAddon: Multiblock", 30003, 17200, maskAlignerUV.class          , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.0F, NBT_RESISTANCE, 4.0F,NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "maskAlignerUV"    , NBT_INPUT,  128, NBT_INPUT_MIN, 64  , NBT_INPUT_MAX,  256, NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.MaskAligner      ,NBT_INV_SIDE_AUTO_IN, SIDE_UP, NBT_INV_SIDE_AUTO_OUT, SIDE_BACK                                                                   ), "SLS", "XwX", "CMC", 'L', IL.Comp_Laser_Gas_Ar, 'S', OP.stickLong.dat(aMat), 'X', OP.wireGt02.dat(MT.Cu), 'C', CS.OD_CIRCUITS[2], 'M', OP.casingMachine.dat(aMat));
        aMat = MT.StainlessSteel;  kRegistry0.add("Tiny Distillation Tower"                            , "kTFRUAddon: Multiblock", 30004, 17200, TinyDistillTower.class       , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.0F, NBT_RESISTANCE, 6.0F,NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "distillationtower", NBT_INPUT,  512, NBT_INPUT_MIN, 16  , NBT_INPUT_MAX, 1024, NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, recipeMaps.TinyDistillTower ,                               NBT_INV_SIDE_AUTO_OUT, SIDE_BACK  , NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK  , NBT_CHEAP_OVERCLOCKING, T ), "QPQ", "PMP", "QPQ", 'M', gRegistry.getItem(18102), 'P', OP.pipeNonuple.dat(aMat),'Q',OP.pipeLarge.dat(aMat));
                                   kRegistry0.add("Small Distillation Tower"                           , "kTFRUAddon: Multiblock", 30005, 17200, SmallDistillTower.class      , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.0F, NBT_RESISTANCE, 6.0F,NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "distillationtower", NBT_INPUT,  512, NBT_INPUT_MIN, 16  , NBT_INPUT_MAX, 2048, NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, recipeMaps.SmallDistillTower,                               NBT_INV_SIDE_AUTO_OUT, SIDE_BACK  , NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK  , NBT_CHEAP_OVERCLOCKING, T ), "PQP", "PMP", "PQP", 'M', gRegistry.getItem(18102), 'P', OP.pipeNonuple.dat(aMat),'Q',OP.pipeLarge.dat(aMat));
                                   kRegistry0.add("Distillation Tower"                                 , "kTFRUAddon: Multiblock", 30006, 17200, DistillTower.class           , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.0F, NBT_RESISTANCE, 6.0F,NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "distillationtower", NBT_INPUT,  512, NBT_INPUT_MIN, 16  , NBT_INPUT_MAX, 4096, NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_RECIPEMAP, recipeMaps.DistillTower     ,                               NBT_INV_SIDE_AUTO_OUT, SIDE_BACK  , NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK  , NBT_CHEAP_OVERCLOCKING, T ), "PPP", "PMP", "PPP", 'M', gRegistry.getItem(18102), 'P', OP.pipeNonuple.dat(aMat));
                                   kRegistry0.add("Sun Heater"                                         , "kTFRUAddon: Multiblock", 30007, 17200, SunHeater.class              , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.0F, NBT_RESISTANCE, 6.0F), "hIw", "PMP", "CIN", 'M', gRegistry.getItem(18002), 'P', IL.PUMPS[2],'I',kRegistry0.getItem(31003),'N',gRegistry.getItem(28903),'C',gRegistry.getItem(28353));

                                   kRegistry0.add("Mask Aligner (UV+)"                                 , "kTFRUAddon: Multiblock", 30009, 17200, maskAlignerUVPlus.class      , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  8.0F, NBT_RESISTANCE, 4.0F,NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),                                   NBT_INPUT,  512, NBT_INPUT_MIN , 256, NBT_INPUT_MAX, 1024, NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.MaskAligner      ,                               NBT_INV_SIDE_AUTO_OUT, SIDE_UP    , NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK), "SLS", "XwX", "CMC", 'L',IL.Comp_Laser_Gas_Ar, 'S', OP.stickLong.dat(aMat), 'X', OP.wireGt04.dat(MT.Cu), 'C', "ktfruNoviceComputer", 'M', OP.casingMachine.dat(aMat));
        aMat = MT.Cr;              kRegistry0.add("Mask Aligner (DUV)"                                 , "kTFRUAddon: Multiblock", 30010, 17200, maskAlignerDUV.class         , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 12.0F, NBT_RESISTANCE, 6.0F,NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),                                   NBT_INPUT, 2048, NBT_INPUT_MIN ,1024, NBT_INPUT_MAX, 4096, NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.MaskAligner      ,NBT_INV_SIDE_AUTO_IN, SIDE_UP ,NBT_INV_SIDE_AUTO_OUT, SIDE_BACK  ));
        aMat = MT.W;               kRegistry0.add("Mask Aligner (EUV)"                                 , "kTFRUAddon: Multiblock", 30011, 17200, maskAlignerEUV.class         , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 14.0F, NBT_RESISTANCE, 6.0F,NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),                                   NBT_INPUT, 8192, NBT_INPUT_MIN ,4096, NBT_INPUT_MAX,16384, NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_RECIPEMAP, recipeMaps.MaskAligner      ,NBT_INV_SIDE_AUTO_IN, SIDE_UP ,NBT_INV_SIDE_AUTO_OUT, SIDE_BACK  ));
        aMat = MT.Al;              kRegistry0.add("3-axle CNC Machine"                                 , "kTFRUAddon: Multiblock", 30012, 17200, CNCMachine3.class            , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.0F, NBT_RESISTANCE, 6.0F,NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "cncmachine3",       NBT_INPUT,  128, NBT_INPUT_MIN ,  64, NBT_INPUT_MAX,  256, NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.CNC              ,NBT_INV_SIDE_AUTO_IN, SIDE_UP ,NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM), "GLG", "hCs", "WMW", 'C', "ktfruBasicComputer", 'W', OP.wireFine.dat(MT.Ag), 'G', OP.dust.dat(ANY.Glowstone),'L',OP.plate.mat(MT.Glass,1),'M',OP.casingMachine.dat(aMat));
        aMat = MT.StainlessSteel;  kRegistry0.add("Oil Miner"                                          , "kTFRUAddon: Multiblock", 30013, 17200, oilMiner.class               , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.0F, NBT_RESISTANCE, 6.0F,NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid), NBT_TEXTURE, "oilminer",          NBT_INPUT,  128, NBT_INPUT_MIN ,  16, NBT_INPUT_MAX, 1024, NBT_ENERGY_ACCEPTED, TD.Energy.KU                                             ,NBT_INV_SIDE_AUTO_IN, SIDE_UP ,NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM ,NBT_DESIGN, 18002, NBT_CHEAP_OVERCLOCKING, true), "hMs", "PIP", "RIR", 'C', IL.Circuit_Advanced, 'R', OP.ring.dat(aMat),'P',OP.plate.dat(aMat),'I',gRegistry.getItem(26165),'M',gRegistry.getItem(18002));OreDictManager.INSTANCE.setItemData(kRegistry0.getItem(30013),new OreDictItemData(aMat,30*U+U2));

        aMat = MT.StainlessSteel;  kRegistry0.add("Tokamak Fusion Reactor (T§be§r)"                    , "kTFRUAddon: Multiblock", 30014, 17200, fusionReactorTokamakExp.class, aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.0F, NBT_RESISTANCE, 6.0F,NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),                                   NBT_INPUT, 2048, NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.FusionTokamak      ,NBT_ENERGY_ACCEPTED_2, TD.Energy.LU, NBT_SPECIAL_IS_START_ENERGY, T, NBT_NO_CONSTANT_POWER, T, NBT_INV_SIDE_AUTO_IN, SIDE_UP ,NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM));
        aMat = MT.StainlessSteel;  kRegistry0.add("Tokamak Fusion Reactor (T1)"                        , "kTFRUAddon: Multiblock", 30015, 17200, fusionReactorTokamakT1.class , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.0F, NBT_RESISTANCE, 6.0F,NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),                                   NBT_INPUT,16384, NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_RECIPEMAP, recipeMaps.FusionTokamak      ,NBT_ENERGY_ACCEPTED_2, TD.Energy.LU, NBT_SPECIAL_IS_START_ENERGY, T, NBT_NO_CONSTANT_POWER, T ,NBT_INV_SIDE_AUTO_IN, SIDE_UP ,NBT_INV_SIDE_AUTO_OUT, SIDE_BOTTOM));

        aMat = MT.StainlessSteel;  kRegistry0.add("Magnalium Gas Turbine Main Housing"                 , "kTFRUAddon: Multiblock", 30016, 17200, MultiTileEntityLargeTurbineGas.class     , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "gasturbine"              , NBT_DESIGN, 31029, NBT_OUTPUT,   2048, NBT_WASTE_ENERGY, F, NBT_LIMIT_CONSUMPTION, T, NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_FUELMAP, FM.Gas), "PwP", "BMC", "PEP", 'M', kRegistry0.getItem(30020), 'B', "gt:re-battery1", 'C', OD_CIRCUITS[4], 'E', IL.MOTORS[1], 'P', OP.plateDense.dat(MT.Invar));
        aMat = MT.Ti;              kRegistry0.add("Trinitanium Gas Turbine Main Housing"               , "kTFRUAddon: Multiblock", 30017, 17200, MultiTileEntityLargeTurbineGas.class     , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   9.0F, NBT_RESISTANCE,   9.0F, NBT_TEXTURE, "gasturbine"              , NBT_DESIGN, 31030, NBT_OUTPUT,   4096, NBT_WASTE_ENERGY, F, NBT_LIMIT_CONSUMPTION, T, NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_FUELMAP, FM.Gas), "PwP", "BMC", "PEP", 'M', kRegistry0.getItem(30021), 'B', "gt:re-battery2", 'C', OD_CIRCUITS[5], 'E', IL.MOTORS[2], 'P', OP.plateDense.dat(MT.TungstenSteel));
        aMat = MT.TungstenSteel;   kRegistry0.add("Graphene Gas Turbine Main Housing"                  , "kTFRUAddon: Multiblock", 30018, 17200, MultiTileEntityLargeTurbineGas.class     , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  12.5F, NBT_RESISTANCE,  12.5F, NBT_TEXTURE, "gasturbine"              , NBT_DESIGN, 31031, NBT_OUTPUT,  16384, NBT_WASTE_ENERGY, F, NBT_LIMIT_CONSUMPTION, T, NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_FUELMAP, FM.Gas), "PwP", "BMC", "PEP", 'M', kRegistry0.getItem(30022), 'B', "gt:re-battery3", 'C', OD_CIRCUITS[6], 'E', IL.MOTORS[3], 'P', OP.plateDense.dat(MT.W));
        aMat = MT.Ad;              kRegistry0.add("Vibramantium Gas Turbine Main Housing"              , "kTFRUAddon: Multiblock", 30019, 17200, MultiTileEntityLargeTurbineGas.class     , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 100.0F, NBT_RESISTANCE, 100.0F, NBT_TEXTURE, "gasturbine"              , NBT_DESIGN, 31032, NBT_OUTPUT, 131072, NBT_WASTE_ENERGY, F, NBT_LIMIT_CONSUMPTION, T, NBT_ENERGY_ACCEPTED, TD.Energy.HU, NBT_ENERGY_EMITTED, TD.Energy.RU, NBT_FUELMAP, FM.Gas), "PwP", "BMC", "PEP", 'M', kRegistry0.getItem(30023), 'B', "gt:re-battery4", 'C', OD_CIRCUITS[6], 'E', IL.MOTORS[4], 'P', OP.plateDense.dat(MT.Ad));
        
        aMat = MT.StainlessSteel;  kRegistry0.add("Magnalium Steam Turbine Main Housing"               , "kTFRUAddon: Multiblock", 30020, 17200, MultiTileEntityLargeTurbineSteam.class   , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "largeturbine"            , NBT_DESIGN, 31029, NBT_INPUT,   6144*STEAM_PER_EU, NBT_OUTPUT,   2048, NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.STEAM, NBT_ENERGY_EMITTED, TD.Energy.RU), "wPc", "PMP", "DPC", 'M', gRegistry.getItem(18022),'D',ItemList.VibrateDetector,'C',OD_CIRCUITS[4], 'P', OP.blockPlate.dat(MT.Magnalium));
        aMat = MT.Ti;              kRegistry0.add("Trinitanium Steam Turbine Main Housing"             , "kTFRUAddon: Multiblock", 30021, 17200, MultiTileEntityLargeTurbineSteam.class   , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   9.0F, NBT_RESISTANCE,   9.0F, NBT_TEXTURE, "largeturbine"            , NBT_DESIGN, 31030, NBT_INPUT,  12288*STEAM_PER_EU, NBT_OUTPUT,   4096, NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.STEAM, NBT_ENERGY_EMITTED, TD.Energy.RU), "wPc", "PMP", "DPC", 'M', gRegistry.getItem(18026),'D',ItemList.VibrateDetector,'C',OD_CIRCUITS[5], 'P', OP.blockPlate.dat(MT.Trinitanium));
        aMat = MT.TungstenSteel;   kRegistry0.add("Graphene Steam Turbine Main Housing"                , "kTFRUAddon: Multiblock", 30022, 17200, MultiTileEntityLargeTurbineSteam.class   , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  12.5F, NBT_RESISTANCE,  12.5F, NBT_TEXTURE, "largeturbine"            , NBT_DESIGN, 31031, NBT_INPUT,  24576*STEAM_PER_EU, NBT_OUTPUT,  16384, NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.STEAM, NBT_ENERGY_EMITTED, TD.Energy.RU), "wPc", "PMP", "DPC", 'M', gRegistry.getItem(18023),'D',ItemList.VibrateDetector,'C',OD_CIRCUITS[6], 'P', OP.blockPlate.dat(MT.Graphene));
        aMat = MT.Ad;              kRegistry0.add("Vibramantium Steam Turbine Main Housing"            , "kTFRUAddon: Multiblock", 30023, 17200, MultiTileEntityLargeTurbineSteam.class   , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 100.0F, NBT_RESISTANCE, 100.0F, NBT_TEXTURE, "largeturbine"            , NBT_DESIGN, 31032, NBT_INPUT, 196608*STEAM_PER_EU, NBT_OUTPUT, 131072, NBT_WASTE_ENERGY, T, NBT_ENERGY_ACCEPTED, TD.Energy.STEAM, NBT_ENERGY_EMITTED, TD.Energy.RU), "wPc", "PMP", "DPC", 'M', gRegistry.getItem(18025),'D',ItemList.VibrateDetector,'C',OD_CIRCUITS[6], 'P', OP.blockPlate.dat(MT.Vibramantium));

        aMat = MT.StainlessSteel;  kRegistry0.add("Liquid Battery ("+aMat.getLocal()+")"               , "kTFRUAddon: Multiblock", 30024, 17200, LiquidBattery.class    , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F      , NBT_DESIGN, 18022, NBT_INPUT_MIN, 64, NBT_INPUT_MAX, 1024, NBT_OUTPUT_MIN, 512, NBT_OUTPUT_MAX, 1024, MAX_AMPERE,  64, LOSS_PERCENT, 0.1F, kTileNBT.MAX_LAYER, 16, kTileNBT.MAX_RANGE, 16));recipeMaps.Assembler.addRecipeX(false,  400, 800,ST.array(OP.casingMachineDense.mat(aMat, 1), OP.rotor.mat(aMat, 16), gRegistry.getItem(24823), IL.Circuit_Good    .get(2)), FL.array(aMat.liquid(4*U, true)), ZL_FS, kRegistry0.getItem());
        aMat = MT.Ti;              kRegistry0.add("Liquid Battery ("+aMat.getLocal()+")"               , "kTFRUAddon: Multiblock", 30025, 17200, LiquidBattery.class    , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F      , NBT_DESIGN, 18026, NBT_INPUT_MIN, 64, NBT_INPUT_MAX, 4096, NBT_OUTPUT_MIN,2048, NBT_OUTPUT_MAX, 4096, MAX_AMPERE, 128, LOSS_PERCENT, 0.1F, kTileNBT.MAX_LAYER, 32, kTileNBT.MAX_RANGE, 32));recipeMaps.Assembler.addRecipeX(false,  800, 800,ST.array(OP.casingMachineDense.mat(aMat, 1), OP.rotor.mat(aMat, 16), gRegistry.getItem(24833), IL.Circuit_Advanced.get(2)), FL.array(aMat.liquid(4*U, true)), ZL_FS, kRegistry0.getItem());
        aMat = MT.TungstenSteel;   kRegistry0.add("Liquid Battery ("+aMat.getLocal()+")"               , "kTFRUAddon: Multiblock", 30026, 17200, LiquidBattery.class    , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F      , NBT_DESIGN, 18023, NBT_INPUT_MIN, 64, NBT_INPUT_MAX,16384, NBT_OUTPUT_MIN,8192, NBT_OUTPUT_MAX,16384, MAX_AMPERE, 256, LOSS_PERCENT, 0.1F, kTileNBT.MAX_LAYER, 64, kTileNBT.MAX_RANGE, 48));recipeMaps.Assembler.addRecipeX(false, 1400, 800,ST.array(OP.casingMachineDense.mat(aMat, 1), OP.rotor.mat(aMat, 16), gRegistry.getItem(24843), IL.Circuit_Elite   .get(2)), FL.array(aMat.liquid(4*U, true)), ZL_FS, kRegistry0.getItem());

        aMat = MT.TungstenSteel;   kRegistry0.add("Fuel Deburn Factory"                                , "kTFRUAddon: Multiblock", 30027, 17200, fuelDeburnFactory.class, aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F,NBT_RECIPEMAP, recipeMaps.FuelDeburner, NBT_INPUT_MIN, 64, NBT_INPUT_MAX,16384, NBT_INV_SIDE_AUTO_OUT, SIDE_UP ,NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK));

        aMat = MT.W;               kRegistry0.add("Mantle Heater"                                      , "kTFRUAddon: Multiblock", 30028, 17200, MantleHeater.class     , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_INPUT_MIN, 64, NBT_INPUT_MAX,16384, NBT_INV_SIDE_AUTO_OUT, SIDE_UP ,NBT_TANK_SIDE_AUTO_OUT, SIDE_BACK),"GRG","wMh","PDP", 'G', OP.gearGt.dat(aMat), 'R', kRegistry0.getItem(31039), 'M', OP.casingMachineDouble.dat(aMat), 'P', gRegistry.getItem(26202), 'D', OP.toolHeadDrill.dat(aMat));

        aMat = MT.Ti;              kRegistry0.add("Transformattery (EU)"                               , "kTFRUAddon: Multiblock", 30029, 17200, TransformBattery.class     , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_INPUT_MIN, 64, NBT_INPUT_MAX, 16384, MAX_AMPERE, 128, LOSS_PERCENT,      1F, NBT_ENERGY_ACCEPTED, TD.Energy.EU, NBT_DESIGN+".wall", 18006, NBT_DESIGN+".coil", 18041, NBT_DESIGN+".batt", 31041, NBT_DESIGN+".cond", 31040),"SCS","wMh","WPW", 'S', gRegistry.getItem(29269), 'P', OP.plateDouble.dat(aMat), 'M', OP.casingMachineDouble.dat(aMat), 'W', gRegistry.getItem(29273), 'C', "ktfruNoviceComputer");
        aMat = MT.TungstenSteel;   kRegistry0.add("Transformattery (RU)"                               , "kTFRUAddon: Multiblock", 30030, 17200, TransformBattery.class     , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_INPUT_MIN, 64, NBT_INPUT_MAX, 65536, MAX_AMPERE, 256, LOSS_PERCENT,   0.04F, NBT_ENERGY_ACCEPTED, TD.Energy.RU, NBT_DESIGN+".wall", 18003, NBT_DESIGN+".coil", 18004, NBT_DESIGN+".batt", 31042, NBT_DESIGN+".cond", 31043),"SCS","wMh","WPW", 'S', gRegistry.getItem(29269), 'P', OP.plateDouble.dat(aMat), 'M', OP.casingMachineDouble.dat(aMat), 'W', gRegistry.getItem(24862), 'C', "ktfruNoviceComputer");
        aMat = MT.Ti;              kRegistry0.add("Transformattery (LU)"                               , "kTFRUAddon: Multiblock", 30031, 17200, TransformBattery.class     , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS, 6.0F, NBT_RESISTANCE, 6.0F, NBT_INPUT_MIN, 64, NBT_INPUT_MAX,262144, MAX_AMPERE,1024, LOSS_PERCENT, 0.0002F, NBT_ENERGY_ACCEPTED, TD.Energy.LU, NBT_DESIGN+".wall", 18006, NBT_DESIGN+".coil", 18006, NBT_DESIGN+".batt", 31044, NBT_DESIGN+".cond", 31044),"SCS","wMh","WPW", 'S', gRegistry.getItem(29269), 'P', OP.plateDouble.dat(aMat), 'M', OP.casingMachineDouble.dat(aMat), 'W', gRegistry.getItem(24900), 'C', "ktfruAdvancedComputer");

        aMat = MT.Steel;           kRegistry0.add("Steel Compressed Gas Tank Main Valve"               , "kTFRUAddon: Multiblock", 30100, 17200, LargeCompressedGasTank.class      , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.0F, NBT_RESISTANCE, 6.0F, NBT_TEXTURE, "tankmetal"               , NBT_TANK_CAPACITY,    6912000000L, NBT_DESIGN, 18029, NBT_GASPROOF, T, NBT_ACIDPROOF, F, NBT_PLASMAPROOF, F  ), " R ", "hMs", " R ", 'M', gRegistry.getItem(18029), 'R', OP.ring.dat(aMat));
        aMat = MT.StainlessSteel;  kRegistry0.add("Stainless Steel Compressed Gas Tank Main Valve"     , "kTFRUAddon: Multiblock", 30101, 17200, LargeCompressedGasTank.class      , aMat.mToolQuality, 16, aMachine, UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  6.0F, NBT_RESISTANCE, 6.0F, NBT_TEXTURE, "tankmetal"               , NBT_TANK_CAPACITY,    6912000000L, NBT_DESIGN, 18022, NBT_GASPROOF, T, NBT_ACIDPROOF, T, NBT_PLASMAPROOF, F  ), " R ", "hMs", " R ", 'M', gRegistry.getItem(18022), 'R', OP.ring.dat(aMat));

        //parts
        aClass = CommonPart.class;
        aMat = MT.Al;              kRegistry0.add("Aluminium Wall"  , "kTFRUAddon: Multiblock", 31000, 17200, aClass , aMat.mToolQuality, 64, aMachine   , UT.NBT.make(NBT_MATERIAL, MT.Al, NBT_HARDNESS,   4.0F, NBT_RESISTANCE,   12.0F, NBT_TEXTURE, "wall" , NBT_DESIGNS, 7),"wPP", "hPP", 'P', OP.plate.dat(aMat)); RM.Welder.addRecipe2(F, 16, 256, OP.plate.mat(aMat, 4), ST.tag(10), kRegistry0.getItem());
        aClass= SunHeaterMirror.class;
        aMat = MT.Al;              kRegistry0.add("Sun Heater Mirror"     , "kTFRUAddon: Multiblock", 31001, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F),"PFP","BMB","MBC",'P',OP.plate.dat(MT.Glass),'F',OP.foil.dat(MT.Ag),'B',OP.stickLong.dat(aMat),'M',IL.MOTORS[2],'C',IL.Circuit_Good);
        aClass=CommonPart.class;
        aMat = MT.Ag;              kRegistry0.add("Sunlight Absorber"                              , "kTFRUAddon: Multiblock", 31002, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "sunlightabsorber"   , NBT_DESIGNS, 2), " A ","CMC","wPh",'A', matList.PotassiumSodium.getDust(1),'M',OP.casingMachineDouble.dat(aMat),'C',OP.dust.dat(MT.C),'P',OP.pipeQuadruple.dat(aMat));
                                   kRegistry0.add("Heat Pipe"                                      , "kTFRUAddon: Multiblock", 31003, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "heattransmitter"   , NBT_DESIGNS, 2), "AAA","AMA","wPh",'A', matList.PotassiumSodium.getDust(1),'M',OP.casingMachine.dat(aMat),'P',OP.pipeNonuple.dat(aMat));
                                   kRegistry0.add("Heat Pipe Top Layer"                            , "kTFRUAddon: Multiblock", 31004, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "sunheatertoplayer"   , NBT_DESIGNS, 2), "LAL","AMA","wPh",'A', matList.PotassiumSodium.getDust(1),'M',OP.casingMachine.dat(aMat),'P',OP.pipeNonuple.dat(aMat),'L',OP.plateDense.dat(aMat));
        aMat = MT.StainlessSteel;  kRegistry0.add("Mask Aligner Platform Motor"                    , "kTFRUAddon: Multiblock", 31005, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2), "WSW","CSC","wMh", 'S',OP.stickLong.dat(aMat),'W',OP.wireGt04.dat(MT.Ag),'M',OP.casingMachine.dat(aMat),'C',IL.CONVEYERS[3]);
                                   kRegistry0.add("Mask Aligner Wafer Platform"                    , "kTFRUAddon: Multiblock", 31006, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2), "   ","WRW","wMh", 'P',OP.plate.dat(aMat),'W',OP.wireGt04.dat(MT.Ag),'M',gRegistry.getItem(18002),'R',OP.plate.dat(aMat));
        aMat = MT.Al;              kRegistry0.add("CNC Platform"                                   , "kTFRUAddon: Multiblock", 31007, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2), "   "," P ","wMh", 'M',kRegistry0.getItem(31000),'P',OP.plate.dat(MT.StainlessSteel));
                                   kRegistry0.add("CNC Motor"                                      , "kTFRUAddon: Multiblock", 31008, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2), " C ","WPW","wMh", 'P',IL.MOTORS[2],'W',OP.wireGt02.dat(MT.Ag),'M',kRegistry0.getItem(31000),'C',IL.Circuit_Good);
        aMat = MT.StainlessSteel;  kRegistry0.add("CNC Cutter Head"                                , "kTFRUAddon: Multiblock", 31009, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2), "WRW","PMP","wSf", 'R',IL.MOTORS[3],'W',OP.wireGt04.dat(MT.Ag),'M',OP.casingMachine.mat(MT.StainlessSteel,1),'P',gRegistry.getItem(26340),'S',OP.stick.mat(MT.Cr,1));
        aMat = MT.Al;              kRegistry0.add("Light Module (UV)"                              , "kTFRUAddon: Multiblock", 31010, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "lightmodule"   , NBT_DESIGNS, 2), "SwS", "PLP", "XMX", 'L', DYE_OREDICTS_LENS[DYE_INDEX_Blue] , 'S', OP.stick.dat(aMat), 'X', OP.wireGt02.dat(MT.Cu), 'M', OP.casingMachine.dat(aMat),'P',OP.plate.dat(aMat));
        aMat = MT.StainlessSteel;  kRegistry0.add("Light Module (UV+)"                             , "kTFRUAddon: Multiblock", 31011, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2),        "SwS", "PLP", "XMX", 'L', DYE_OREDICTS_LENS[DYE_INDEX_Blue] , 'S', OP.stick.dat(aMat), 'X', OP.wireGt02.dat(MT.Au), 'M', OP.casingMachine.dat(aMat),'P',OP.plate.dat(aMat));
        aMat = MT.Cr;              kRegistry0.add("Light Module (DUV)"                             , "kTFRUAddon: Multiblock", 31012, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2));
        aMat = MT.TungstenSteel;   kRegistry0.add("Light Module (EUV)"                             , "kTFRUAddon: Multiblock", 31013, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2));
        aMat = MT.StainlessSteel;  kRegistry0.add("Oil Miner Drill"                                , "kTFRUAddon: Multiblock", 31014, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2), "h  ", "sMP", "EIR", 'C', IL.Circuit_Advanced, 'R', OP.ring.dat(aMat),'P',OP.plate.dat(aMat),'I',gRegistry.getItem(26162),'M',gRegistry.getItem(18002),'E',gRegistry.getItem(26161)); OreDictManager.INSTANCE.setItemData(kRegistry0.getItem(31014),new OreDictItemData(aMat,9*U+U4));
        aMat = MT.StainlessSteel;  kRegistry0.add("Vacuum Plasma Pump"                             , "kTFRUAddon: Multiblock", 31015, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2));
        aMat = MT.StainlessSteel;  kRegistry0.add("Tokamak Magnetic Conductor (T§be§r)"            , "kTFRUAddon: Multiblock", 31016, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2));
        aMat = MT.StainlessSteel;  kRegistry0.add("Tokamak Magnetic Coil (T§be§r)"                 , "kTFRUAddon: Multiblock", 31017, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2));
        aMat = MT.StainlessSteel;  kRegistry0.add("Tokamak Magnetic Wall (T§be§r)"                 , "kTFRUAddon: Multiblock", 31018, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2));
        aMat = MT.StainlessSteel;  kRegistry0.add("Tokamak Plasma Pipe"                            , "kTFRUAddon: Multiblock", 31019, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2));
        aMat = MT.Al;              kRegistry0.add("Mask Aligner IO Manager (UV)"                   , "kTFRUAddon: Multiblock", 31020, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "iomanager"   , NBT_DESIGNS, 2), "SCS", "YMY", "XwX", 'C', CS.OD_CIRCUITS[2], 'S', OP.pipeSmall.dat(aMat),'Y', IL.CONVEYERS[2], 'X', OP.wireGt02.dat(MT.Cu), 'M', OP.casingMachine.dat(aMat));
        aMat = MT.StainlessSteel;  kRegistry0.add("Mask Aligner IO Manager (UV+)"                  , "kTFRUAddon: Multiblock", 31021, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "iomanager"   , NBT_DESIGNS, 2), "SCS", "YMY", "XwX", 'C', CS.OD_CIRCUITS[3], 'S', OP.pipeSmall.dat(aMat),'Y', IL.CONVEYERS[3], 'X', OP.wireGt02.dat(MT.Ag), 'M', OP.casingMachine.dat(aMat));
        //aMat = ;     kRegistry0.add("Mask Aligner IO Manager (DUV)"     , "kTFRUAddon: Multiblock", 31022, 17200, MultiTileEntityMultiBlockPart.class , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "iomanager"   , NBT_DESIGNS, 2));
        //aMat = ;     kRegistry0.add("Mask Aligner IO Manager (EUV)"     , "kTFRUAddon: Multiblock", 31023, 17200, MultiTileEntityMultiBlockPart.class , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "iomanager"   , NBT_DESIGNS, 2));
        aMat = MT.StainlessSteel;  kRegistry0.add("Tokamak Coolant Pump"                           , "kTFRUAddon: Multiblock", 31024, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2));
        aMat = MT.StainlessSteel;  kRegistry0.add("Tokamak Magnetic Conductor (T1)"                , "kTFRUAddon: Multiblock", 31025, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2));
        aMat = MT.StainlessSteel;  kRegistry0.add("Tokamak Magnetic Coil (T1)"                     , "kTFRUAddon: Multiblock", 31026, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2));
        aMat = MT.StainlessSteel;  kRegistry0.add("Tokamak Magnetic Wall (T1)"                     , "kTFRUAddon: Multiblock", 31027, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2));
        aMat = MT.StainlessSteel;  kRegistry0.add("Tokamak Neutron Heator"                         , "kTFRUAddon: Multiblock", 31028, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2));
        aMat = MT.StainlessSteel;  kRegistry0.add("Stainless Steel Turbine Shell"                  , "kTFRUAddon: Multiblock", 31029, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2)); recipeMaps.CNC.addRecipe2(F,200,8000,ST.tag(0),gRegistry.getItem(18002),FL.array(FL.DistW.make(2000)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ti;              kRegistry0.add("Titanium Turbine Shell"                         , "kTFRUAddon: Multiblock", 31030, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2)); recipeMaps.CNC.addRecipe2(F,200,8000,ST.tag(0),gRegistry.getItem(18006),FL.array(FL.DistW.make(2000)),ZL_FS,kRegistry0.getItem());
        aMat = MT.TungstenSteel;   kRegistry0.add("Tungsten Steel Turbine Shell"                   , "kTFRUAddon: Multiblock", 31031, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2)); recipeMaps.CNC.addRecipe2(F,200,8000,ST.tag(0),gRegistry.getItem(18003),FL.array(FL.DistW.make(2000)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Ad;              kRegistry0.add("Adamantium Turbine Shell"                       , "kTFRUAddon: Multiblock", 31032, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"   , NBT_DESIGNS, 2)); recipeMaps.CNC.addRecipe2(F,200,8000,ST.tag(0),gRegistry.getItem(18005),FL.array(FL.DistW.make(2000)),ZL_FS,kRegistry0.getItem());

        aMat = MT.Bronze;          kRegistry0.add("Fluid Battery Wall ("+aMat.getLocal()+")"       , "kTFRUAddon: Multiblock", 31034, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   1.0F, NBT_TEXTURE, "wall"                   ), "wPf", "cCs", "   ", 'P', OP.plate.dat(aMat), 'C', OD.craftingHardenedClay);
        aMat = MT.Steel;           kRegistry0.add("Fluid Battery Wall ("+aMat.getLocal()+")"       , "kTFRUAddon: Multiblock", 31035, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   1.0F, NBT_TEXTURE, "wall"                   ), "wPf", "cCs", "   ", 'P', OP.plate.dat(aMat), 'C', OD.craftingHardenedClay);
        aMat = MT.Plastic;         kRegistry0.add("Fluid Battery Wall ("+aMat.getLocal()+")"       , "kTFRUAddon: Multiblock", 31036, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   1.0F, NBT_TEXTURE, "wall"                   ), "wPf", "cCs", " P ", 'P', OP.plate.dat(aMat), 'C', OD.craftingHardenedClay);
        aMat = MT.VanadiumSteel;   kRegistry0.add("Enhanced Frame ("+aMat.getLocal()+")"           , "kTFRUAddon: Multiblock", 31037, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,  16.0F, NBT_RESISTANCE,  16.0F, NBT_TEXTURE, "wall"                   ) );
        aMat = MT.StainlessSteel;  kRegistry0.add("Chemical Reactor Pipe ("+aMat.getLocal()+")"    , "kTFRUAddon: Multiblock", 31038, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   1.0F, NBT_RESISTANCE,   1.0F, NBT_TEXTURE, "wall"                   ) );
        aMat = MT.W;               kRegistry0.add("Mantle Drill Rod"                               , "kTFRUAddon: Multiblock", 31039, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "heattransmitter"        ), "AAA","AMA","wPh",'A', matList.PotassiumSodium.getDust(1),'M',OP.casingMachine.dat(aMat),'P',OP.pipeNonuple.dat(aMat));
        aMat = MT.ElectricalSteel; kRegistry0.add("Magnic Conductor"                               , "kTFRUAddon: Multiblock", 31040, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"                   )); recipeMaps.Assembler.addRecipe2(F,200,800,ST.tag(0),OP.plateDense.mat(MT.ElectricalSteel, 4),FL.array(MT.SolderingAlloy.liquid(U,true)),ZL_FS,kRegistry0.getItem());
        aMat = MT.Cr;              kRegistry0.add("Battery Cabin"                                  , "kTFRUAddon: Multiblock", 31041, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"                   ), "CPC", "wMh", "WPW",'C',"ktfruNoviceComputer",'P', OP.plateQuadruple.dat(aMat), 'M', OP.casingMachineDouble.dat(aMat), 'W', gRegistry.getItem(29277));
        aMat = MT.TungstenSteel;   kRegistry0.add("Flywheel Cabin"                                 , "kTFRUAddon: Multiblock", 31042, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"                   ));
        aMat = MT.TungstenSteel;   kRegistry0.add("Transformattery Gear Set"                       , "kTFRUAddon: Multiblock", 31043, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"                   ));
        aMat = MT.EnergiumRed;     kRegistry0.add("Energy Crystal Block"                           , "kTFRUAddon: Multiblock", 31044, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "wall"                   ));


        //special part
        aMat = MT.Al;              kRegistry0.add("Mask Aligner Energy Module (UV)"      , "kTFRUAddon: Multiblock", 31500, 17200, ConditionPartEnergy.class , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "energymodule0",NBT_DESIGNS, 2, NBT_INPUT_MIN,  64, NBT_INPUT, 192, NBT_INPUT_MAX,   256 , NBT_ENERGY_ACCEPTED, TD.Energy.EU), "ShS", "wT ", "XCX" ,'T',gRegistry.getItem(10042), 'S', OP.stickLong.dat(aMat), 'X', OP.wireGt08.dat(MT.Cu), 'C', CS.OD_CIRCUITS[2], 'M', OP.casingMachine.dat(aMat));
        aMat = MT.StainlessSteel;  kRegistry0.add("Mask Aligner Energy Module (UV+)"     , "kTFRUAddon: Multiblock", 31501, 17200, ConditionPartEnergy.class , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "energymodule1",NBT_DESIGNS, 2, NBT_INPUT_MIN,  256,NBT_INPUT, 768, NBT_INPUT_MAX,  1024 , NBT_ENERGY_ACCEPTED, TD.Energy.EU), "ShS", "wT ", "XCX" ,'T',gRegistry.getItem(10043), 'S', OP.stickLong.dat(aMat), 'X', OP.wireGt08.dat(MT.Ag), 'C', CS.OD_CIRCUITS[2], 'M', OP.casingMachine.dat(aMat));


        //aMat = ;     kRegistry0.add("Mask Aligner Energy Module (DUV)"     , "kTFRUAddon: Multiblock", 31502, 17200, MultiTileEntityMultiBlockPartEnergyConsumer.class , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "energymodule",NBT_DESIGNS, 2   , NBT_INPUT, 3072, NBT_INPUT_MIN,    2048, NBT_INPUT_MAX,   4096  , NBT_ENERGY_ACCEPTED, TD.Energy.EU));

        //aMat = ;     kRegistry0.add("Mask Aligner Energy Module (EUV)"     , "kTFRUAddon: Multiblock", 31503, 17200, MultiTileEntityMultiBlockPartEnergyConsumer.class , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "energymodule",NBT_DESIGNS, 2  ));

        aClass=MultiBlockPartComputeCluster.class;
        aMat = MT.Cr;  kRegistry0.add("Compute Cluster"     , "kTFRUAddon: Multiblock", 32005, 17200, aClass , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "computercluster"   , NBT_DESIGNS, 7));

        aMat = MT.StainlessSteel;              kRegistry0.add("Compute Cluster Simple"     , "kTFRUAddon: Multiblock", 32006, 17200, MultiBlockPartComputeClusterSimple.class , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "computerclustersimple"   , NBT_DESIGNS, 7));
        aMat = MT.StainlessSteel;              kRegistry0.add("Dyson Sphere Monitor"     , "kTFRUAddon: Multiblock", 32750, 17200, dysonSphereMonitor.class , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "computercluster", NBT_INPUT, 3072, NBT_INPUT_MIN,    2048, NBT_INPUT_MAX,   4096  ,NBT_RECIPEMAP, recipeMaps.Code , NBT_ENERGY_ACCEPTED, TD.Energy.EU));
        aMat = MT.StainlessSteel;              kRegistry0.add("Code Util Machine"     , "kTFRUAddon: Multiblock", 32760, 17200, MachineCodeUtil.class , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F, NBT_TEXTURE, "computercluster", NBT_INPUT, 3072, NBT_INPUT_MIN,    2048, NBT_INPUT_MAX,   4096  ,NBT_RECIPEMAP, recipeMaps.Code , NBT_ENERGY_ACCEPTED, TD.Energy.EU, "ktfru.circuits", ICircuitChangeableTileEntity.addCircuit(1,1,3,3,2,2,1,2,1,3,1,4,1,5)));
        aMat = MT.Bronze;                      kRegistry0.add("Rust Bronze Machine Casing"     , "kTFRUAddon: Casing", 32761, 1230, rustBronzeCasing.class , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F));
        aMat = MT.Bronze;                      kRegistry0.add("DeRust Bronze Machine Casing"     , "kTFRUAddon: Casing", 32762, 1230, MultiTileEntityMultiBlockPart.class , aMat.mToolQuality, 16, aMachine   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),NBT_HARDNESS,   6.0F, NBT_RESISTANCE,   6.0F,NBT_TEXTURE, "wall"));RM.Welder.addRecipe2(F,16,200,kRegistry0.getItem(32762,1),OP.plate.mat(MT.Bronze,1),ZL_FS,ZL_FS,OP.casingMachine.mat(MT.Bronze,1));
        aMat = MT.RedSteel;                    kRegistry0.add("Red Steel Crucible Model"     , "kTFRUAddon: Machines", 32763, 20001, CrucibleModel.class , aMat.mToolQuality, 16, tMetalBlock   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),NBT_HARDNESS,   2.0F, NBT_RESISTANCE,   2.0F),"   "," M ","hPf",'P',OP.plate.mat(MT.RedSteel,1), 'M', ItemList.CrucibleModelInnerLayer.get(1)); recipeMaps.CrucibleModel.mRecipeMachineList.add(kRegistry0.getItem());
        aMat = MT.BlueSteel;                   kRegistry0.add("Blue Steel Crucible Model"     , "kTFRUAddon: Machines", 32764, 20001, CrucibleModel.class , aMat.mToolQuality, 16, tMetalBlock   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),NBT_HARDNESS,   2.0F, NBT_RESISTANCE,  2.0F),"   "," M ","hPf",'P',OP.plate.mat(MT.BlueSteel,1), 'M', ItemList.CrucibleModelInnerLayer.get(1));recipeMaps.CrucibleModel.mRecipeMachineList.add(kRegistry0.getItem());

        aMat = MT.Trinitanium;                 kRegistry0.add("Debug Generator"     , "kTFRUAddon: Machines", 32766, 20001, DebugGenerator.class , aMat.mToolQuality, 16, tMetalBlock   , UT.NBT.make(NBT_MATERIAL, aMat, NBT_COLOR, UT.Code.getRGBInt(aMat.fRGBaSolid),NBT_HARDNESS, -1, NBT_RESISTANCE,  -1));

    }
}